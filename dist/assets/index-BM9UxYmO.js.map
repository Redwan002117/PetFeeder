{"version":3,"file":"index-BM9UxYmO.js","sources":["../../node_modules/react-dom/client.js","../../src/contexts/AuthContext.tsx","../../node_modules/react-hook-form/dist/index.esm.mjs","../../src/pages/LoginPage.tsx","../../src/pages/RegisterPage.tsx","../../src/pages/HomePage.tsx","../../src/pages/FeedingSchedulePage.tsx","../../src/pages/SettingsPage.tsx","../../src/pages/ProfilePage.tsx","../../src/components/ui/toaster.tsx","../../src/components/Layout.tsx","../../src/App.tsx","../../node_modules/uuid/dist/esm-browser/rng.js","../../node_modules/uuid/dist/esm-browser/stringify.js","../../node_modules/uuid/dist/esm-browser/native.js","../../node_modules/uuid/dist/esm-browser/v4.js","../../src/contexts/NotificationContext.tsx","../../src/main.tsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import React, { createContext, useContext, useState, ReactNode } from 'react';\r\n\r\ninterface User {\r\n  id: string;\r\n  email: string;\r\n  name?: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n  register: (email: string, password: string, name?: string) => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    // Implement actual login logic here\r\n    // For now, just simulate a successful login with mock data\r\n    setUser({ id: '123', email });\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n  };\r\n\r\n  const register = async (email: string, password: string, name?: string) => {\r\n    // Implement actual registration logic here\r\n    // For now, just simulate a successful registration with mock data\r\n    setUser({ id: '123', email, name });\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout, register }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n","import React from 'react';\n\nvar isCheckBoxInput = (element) => element.type === 'checkbox';\n\nvar isDateObject = (value) => value instanceof Date;\n\nvar isNullOrUndefined = (value) => value == null;\n\nconst isObjectType = (value) => typeof value === 'object';\nvar isObject = (value) => !isNullOrUndefined(value) &&\n    !Array.isArray(value) &&\n    isObjectType(value) &&\n    !isDateObject(value);\n\nvar getEventValue = (event) => isObject(event) && event.target\n    ? isCheckBoxInput(event.target)\n        ? event.target.checked\n        : event.target.value\n    : event;\n\nvar getNodeParentName = (name) => name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\n\nvar isNameInFieldArray = (names, name) => names.has(getNodeParentName(name));\n\nvar isPlainObject = (tempObject) => {\n    const prototypeCopy = tempObject.constructor && tempObject.constructor.prototype;\n    return (isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf'));\n};\n\nvar isWeb = typeof window !== 'undefined' &&\n    typeof window.HTMLElement !== 'undefined' &&\n    typeof document !== 'undefined';\n\nfunction cloneObject(data) {\n    let copy;\n    const isArray = Array.isArray(data);\n    const isFileListInstance = typeof FileList !== 'undefined' ? data instanceof FileList : false;\n    if (data instanceof Date) {\n        copy = new Date(data);\n    }\n    else if (data instanceof Set) {\n        copy = new Set(data);\n    }\n    else if (!(isWeb && (data instanceof Blob || isFileListInstance)) &&\n        (isArray || isObject(data))) {\n        copy = isArray ? [] : {};\n        if (!isArray && !isPlainObject(data)) {\n            copy = data;\n        }\n        else {\n            for (const key in data) {\n                if (data.hasOwnProperty(key)) {\n                    copy[key] = cloneObject(data[key]);\n                }\n            }\n        }\n    }\n    else {\n        return data;\n    }\n    return copy;\n}\n\nvar compact = (value) => Array.isArray(value) ? value.filter(Boolean) : [];\n\nvar isUndefined = (val) => val === undefined;\n\nvar get = (object, path, defaultValue) => {\n    if (!path || !isObject(object)) {\n        return defaultValue;\n    }\n    const result = compact(path.split(/[,[\\].]+?/)).reduce((result, key) => isNullOrUndefined(result) ? result : result[key], object);\n    return isUndefined(result) || result === object\n        ? isUndefined(object[path])\n            ? defaultValue\n            : object[path]\n        : result;\n};\n\nvar isBoolean = (value) => typeof value === 'boolean';\n\nvar isKey = (value) => /^\\w*$/.test(value);\n\nvar stringToPath = (input) => compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n\nvar set = (object, path, value) => {\n    let index = -1;\n    const tempPath = isKey(path) ? [path] : stringToPath(path);\n    const length = tempPath.length;\n    const lastIndex = length - 1;\n    while (++index < length) {\n        const key = tempPath[index];\n        let newValue = value;\n        if (index !== lastIndex) {\n            const objValue = object[key];\n            newValue =\n                isObject(objValue) || Array.isArray(objValue)\n                    ? objValue\n                    : !isNaN(+tempPath[index + 1])\n                        ? []\n                        : {};\n        }\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n            return;\n        }\n        object[key] = newValue;\n        object = object[key];\n    }\n    return object;\n};\n\nconst EVENTS = {\n    BLUR: 'blur',\n    FOCUS_OUT: 'focusout',\n    CHANGE: 'change',\n};\nconst VALIDATION_MODE = {\n    onBlur: 'onBlur',\n    onChange: 'onChange',\n    onSubmit: 'onSubmit',\n    onTouched: 'onTouched',\n    all: 'all',\n};\nconst INPUT_VALIDATION_RULES = {\n    max: 'max',\n    min: 'min',\n    maxLength: 'maxLength',\n    minLength: 'minLength',\n    pattern: 'pattern',\n    required: 'required',\n    validate: 'validate',\n};\n\nconst HookFormContext = React.createContext(null);\n/**\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @returns return all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nconst useFormContext = () => React.useContext(HookFormContext);\n/**\n * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @param props - all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nconst FormProvider = (props) => {\n    const { children, ...data } = props;\n    return (React.createElement(HookFormContext.Provider, { value: data }, children));\n};\n\nvar getProxyFormState = (formState, control, localProxyFormState, isRoot = true) => {\n    const result = {\n        defaultValues: control._defaultValues,\n    };\n    for (const key in formState) {\n        Object.defineProperty(result, key, {\n            get: () => {\n                const _key = key;\n                if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {\n                    control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\n                }\n                localProxyFormState && (localProxyFormState[_key] = true);\n                return formState[_key];\n            },\n        });\n    }\n    return result;\n};\n\nvar isEmptyObject = (value) => isObject(value) && !Object.keys(value).length;\n\nvar shouldRenderFormState = (formStateData, _proxyFormState, updateFormState, isRoot) => {\n    updateFormState(formStateData);\n    const { name, ...formState } = formStateData;\n    return (isEmptyObject(formState) ||\n        Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\n        Object.keys(formState).find((key) => _proxyFormState[key] ===\n            (!isRoot || VALIDATION_MODE.all)));\n};\n\nvar convertToArrayPayload = (value) => (Array.isArray(value) ? value : [value]);\n\nvar shouldSubscribeByName = (name, signalName, exact) => !name ||\n    !signalName ||\n    name === signalName ||\n    convertToArrayPayload(name).some((currentName) => currentName &&\n        (exact\n            ? currentName === signalName\n            : currentName.startsWith(signalName) ||\n                signalName.startsWith(currentName)));\n\nfunction useSubscribe(props) {\n    const _props = React.useRef(props);\n    _props.current = props;\n    React.useEffect(() => {\n        const subscription = !props.disabled &&\n            _props.current.subject &&\n            _props.current.subject.subscribe({\n                next: _props.current.next,\n            });\n        return () => {\n            subscription && subscription.unsubscribe();\n        };\n    }, [props.disabled]);\n}\n\n/**\n * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformstate) • [Demo](https://codesandbox.io/s/useformstate-75xly)\n *\n * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, control } = useForm({\n *     defaultValues: {\n *     firstName: \"firstName\"\n *   }});\n *   const { dirtyFields } = useFormState({\n *     control\n *   });\n *   const onSubmit = (data) => console.log(data);\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input {...register(\"firstName\")} placeholder=\"First Name\" />\n *       {dirtyFields.firstName && <p>Field is dirty.</p>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFormState(props) {\n    const methods = useFormContext();\n    const { control = methods.control, disabled, name, exact } = props || {};\n    const [formState, updateFormState] = React.useState(control._formState);\n    const _mounted = React.useRef(true);\n    const _localProxyFormState = React.useRef({\n        isDirty: false,\n        isLoading: false,\n        dirtyFields: false,\n        touchedFields: false,\n        validatingFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    });\n    const _name = React.useRef(name);\n    _name.current = name;\n    useSubscribe({\n        disabled,\n        next: (value) => _mounted.current &&\n            shouldSubscribeByName(_name.current, value.name, exact) &&\n            shouldRenderFormState(value, _localProxyFormState.current, control._updateFormState) &&\n            updateFormState({\n                ...control._formState,\n                ...value,\n            }),\n        subject: control._subjects.state,\n    });\n    React.useEffect(() => {\n        _mounted.current = true;\n        _localProxyFormState.current.isValid && control._updateValid(true);\n        return () => {\n            _mounted.current = false;\n        };\n    }, [control]);\n    return React.useMemo(() => getProxyFormState(formState, control, _localProxyFormState.current, false), [formState, control]);\n}\n\nvar isString = (value) => typeof value === 'string';\n\nvar generateWatchOutput = (names, _names, formValues, isGlobal, defaultValue) => {\n    if (isString(names)) {\n        isGlobal && _names.watch.add(names);\n        return get(formValues, names, defaultValue);\n    }\n    if (Array.isArray(names)) {\n        return names.map((fieldName) => (isGlobal && _names.watch.add(fieldName), get(formValues, fieldName)));\n    }\n    isGlobal && (_names.watchAll = true);\n    return formValues;\n};\n\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/docs/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * const { control } = useForm();\n * const values = useWatch({\n *   name: \"fieldName\"\n *   control,\n * })\n * ```\n */\nfunction useWatch(props) {\n    const methods = useFormContext();\n    const { control = methods.control, name, defaultValue, disabled, exact, } = props || {};\n    const _name = React.useRef(name);\n    _name.current = name;\n    useSubscribe({\n        disabled,\n        subject: control._subjects.values,\n        next: (formState) => {\n            if (shouldSubscribeByName(_name.current, formState.name, exact)) {\n                updateValue(cloneObject(generateWatchOutput(_name.current, control._names, formState.values || control._formValues, false, defaultValue)));\n            }\n        },\n    });\n    const [value, updateValue] = React.useState(control._getWatch(name, defaultValue));\n    React.useEffect(() => control._removeUnmounted());\n    return value;\n}\n\n/**\n * Custom hook to work with controlled component, this function provide you with both form and field level state. Re-render is isolated at the hook level.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usecontroller) • [Demo](https://codesandbox.io/s/usecontroller-0o8px)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns field properties, field and form state. {@link UseControllerReturn}\n *\n * @example\n * ```tsx\n * function Input(props) {\n *   const { field, fieldState, formState } = useController(props);\n *   return (\n *     <div>\n *       <input {...field} placeholder={props.name} />\n *       <p>{fieldState.isTouched && \"Touched\"}</p>\n *       <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *     </div>\n *   );\n * }\n * ```\n */\nfunction useController(props) {\n    const methods = useFormContext();\n    const { name, disabled, control = methods.control, shouldUnregister } = props;\n    const isArrayField = isNameInFieldArray(control._names.array, name);\n    const value = useWatch({\n        control,\n        name,\n        defaultValue: get(control._formValues, name, get(control._defaultValues, name, props.defaultValue)),\n        exact: true,\n    });\n    const formState = useFormState({\n        control,\n        name,\n        exact: true,\n    });\n    const _registerProps = React.useRef(control.register(name, {\n        ...props.rules,\n        value,\n        ...(isBoolean(props.disabled) ? { disabled: props.disabled } : {}),\n    }));\n    const fieldState = React.useMemo(() => Object.defineProperties({}, {\n        invalid: {\n            enumerable: true,\n            get: () => !!get(formState.errors, name),\n        },\n        isDirty: {\n            enumerable: true,\n            get: () => !!get(formState.dirtyFields, name),\n        },\n        isTouched: {\n            enumerable: true,\n            get: () => !!get(formState.touchedFields, name),\n        },\n        isValidating: {\n            enumerable: true,\n            get: () => !!get(formState.validatingFields, name),\n        },\n        error: {\n            enumerable: true,\n            get: () => get(formState.errors, name),\n        },\n    }), [formState, name]);\n    const field = React.useMemo(() => ({\n        name,\n        value,\n        ...(isBoolean(disabled) || formState.disabled\n            ? { disabled: formState.disabled || disabled }\n            : {}),\n        onChange: (event) => _registerProps.current.onChange({\n            target: {\n                value: getEventValue(event),\n                name: name,\n            },\n            type: EVENTS.CHANGE,\n        }),\n        onBlur: () => _registerProps.current.onBlur({\n            target: {\n                value: get(control._formValues, name),\n                name: name,\n            },\n            type: EVENTS.BLUR,\n        }),\n        ref: (elm) => {\n            const field = get(control._fields, name);\n            if (field && elm) {\n                field._f.ref = {\n                    focus: () => elm.focus(),\n                    select: () => elm.select(),\n                    setCustomValidity: (message) => elm.setCustomValidity(message),\n                    reportValidity: () => elm.reportValidity(),\n                };\n            }\n        },\n    }), [\n        name,\n        control._formValues,\n        disabled,\n        formState.disabled,\n        value,\n        control._fields,\n    ]);\n    React.useEffect(() => {\n        const _shouldUnregisterField = control._options.shouldUnregister || shouldUnregister;\n        const updateMounted = (name, value) => {\n            const field = get(control._fields, name);\n            if (field && field._f) {\n                field._f.mount = value;\n            }\n        };\n        updateMounted(name, true);\n        if (_shouldUnregisterField) {\n            const value = cloneObject(get(control._options.defaultValues, name));\n            set(control._defaultValues, name, value);\n            if (isUndefined(get(control._formValues, name))) {\n                set(control._formValues, name, value);\n            }\n        }\n        !isArrayField && control.register(name);\n        return () => {\n            (isArrayField\n                ? _shouldUnregisterField && !control._state.action\n                : _shouldUnregisterField)\n                ? control.unregister(name)\n                : updateMounted(name, false);\n        };\n    }, [name, control, isArrayField, shouldUnregister]);\n    React.useEffect(() => {\n        control._updateDisabledField({\n            disabled,\n            fields: control._fields,\n            name,\n        });\n    }, [disabled, name, control]);\n    return React.useMemo(() => ({\n        field,\n        formState,\n        fieldState,\n    }), [field, formState, fieldState]);\n}\n\n/**\n * Component based on `useController` hook to work with controlled component.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usecontroller/controller) • [Demo](https://codesandbox.io/s/react-hook-form-v6-controller-ts-jwyzw) • [Video](https://www.youtube.com/watch?v=N2UNk_UCVyA)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns provide field handler functions, field and form state.\n *\n * @example\n * ```tsx\n * function App() {\n *   const { control } = useForm<FormValues>({\n *     defaultValues: {\n *       test: \"\"\n *     }\n *   });\n *\n *   return (\n *     <form>\n *       <Controller\n *         control={control}\n *         name=\"test\"\n *         render={({ field: { onChange, onBlur, value, ref }, formState, fieldState }) => (\n *           <>\n *             <input\n *               onChange={onChange} // send value to hook form\n *               onBlur={onBlur} // notify when input is touched\n *               value={value} // return updated value\n *               ref={ref} // set ref for focus management\n *             />\n *             <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *             <p>{fieldState.isTouched ? \"touched\" : \"\"}</p>\n *           </>\n *         )}\n *       />\n *     </form>\n *   );\n * }\n * ```\n */\nconst Controller = (props) => props.render(useController(props));\n\nconst flatten = (obj) => {\n    const output = {};\n    for (const key of Object.keys(obj)) {\n        if (isObjectType(obj[key]) && obj[key] !== null) {\n            const nested = flatten(obj[key]);\n            for (const nestedKey of Object.keys(nested)) {\n                output[`${key}.${nestedKey}`] = nested[nestedKey];\n            }\n        }\n        else {\n            output[key] = obj[key];\n        }\n    }\n    return output;\n};\n\nconst POST_REQUEST = 'post';\n/**\n * Form component to manage submission.\n *\n * @param props - to setup submission detail. {@link FormProps}\n *\n * @returns form component or headless render prop.\n *\n * @example\n * ```tsx\n * function App() {\n *   const { control, formState: { errors } } = useForm();\n *\n *   return (\n *     <Form action=\"/api\" control={control}>\n *       <input {...register(\"name\")} />\n *       <p>{errors?.root?.server && 'Server error'}</p>\n *       <button>Submit</button>\n *     </Form>\n *   );\n * }\n * ```\n */\nfunction Form(props) {\n    const methods = useFormContext();\n    const [mounted, setMounted] = React.useState(false);\n    const { control = methods.control, onSubmit, children, action, method = POST_REQUEST, headers, encType, onError, render, onSuccess, validateStatus, ...rest } = props;\n    const submit = async (event) => {\n        let hasError = false;\n        let type = '';\n        await control.handleSubmit(async (data) => {\n            const formData = new FormData();\n            let formDataJson = '';\n            try {\n                formDataJson = JSON.stringify(data);\n            }\n            catch (_a) { }\n            const flattenFormValues = flatten(control._formValues);\n            for (const key in flattenFormValues) {\n                formData.append(key, flattenFormValues[key]);\n            }\n            if (onSubmit) {\n                await onSubmit({\n                    data,\n                    event,\n                    method,\n                    formData,\n                    formDataJson,\n                });\n            }\n            if (action) {\n                try {\n                    const shouldStringifySubmissionData = [\n                        headers && headers['Content-Type'],\n                        encType,\n                    ].some((value) => value && value.includes('json'));\n                    const response = await fetch(String(action), {\n                        method,\n                        headers: {\n                            ...headers,\n                            ...(encType ? { 'Content-Type': encType } : {}),\n                        },\n                        body: shouldStringifySubmissionData ? formDataJson : formData,\n                    });\n                    if (response &&\n                        (validateStatus\n                            ? !validateStatus(response.status)\n                            : response.status < 200 || response.status >= 300)) {\n                        hasError = true;\n                        onError && onError({ response });\n                        type = String(response.status);\n                    }\n                    else {\n                        onSuccess && onSuccess({ response });\n                    }\n                }\n                catch (error) {\n                    hasError = true;\n                    onError && onError({ error });\n                }\n            }\n        })(event);\n        if (hasError && props.control) {\n            props.control._subjects.state.next({\n                isSubmitSuccessful: false,\n            });\n            props.control.setError('root.server', {\n                type,\n            });\n        }\n    };\n    React.useEffect(() => {\n        setMounted(true);\n    }, []);\n    return render ? (React.createElement(React.Fragment, null, render({\n        submit,\n    }))) : (React.createElement(\"form\", { noValidate: mounted, action: action, method: method, encType: encType, onSubmit: submit, ...rest }, children));\n}\n\nvar appendErrors = (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria\n    ? {\n        ...errors[name],\n        types: {\n            ...(errors[name] && errors[name].types ? errors[name].types : {}),\n            [type]: message || true,\n        },\n    }\n    : {};\n\nvar generateId = () => {\n    const d = typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = (Math.random() * 16 + d) % 16 | 0;\n        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n    });\n};\n\nvar getFocusFieldName = (name, index, options = {}) => options.shouldFocus || isUndefined(options.shouldFocus)\n    ? options.focusName ||\n        `${name}.${isUndefined(options.focusIndex) ? index : options.focusIndex}.`\n    : '';\n\nvar getValidationModes = (mode) => ({\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\n    isOnChange: mode === VALIDATION_MODE.onChange,\n    isOnAll: mode === VALIDATION_MODE.all,\n    isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n\nvar isWatched = (name, _names, isBlurEvent) => !isBlurEvent &&\n    (_names.watchAll ||\n        _names.watch.has(name) ||\n        [..._names.watch].some((watchName) => name.startsWith(watchName) &&\n            /^\\.\\w+/.test(name.slice(watchName.length))));\n\nconst iterateFieldsByAction = (fields, action, fieldsNames, abortEarly) => {\n    for (const key of fieldsNames || Object.keys(fields)) {\n        const field = get(fields, key);\n        if (field) {\n            const { _f, ...currentField } = field;\n            if (_f) {\n                if (_f.refs && _f.refs[0] && action(_f.refs[0], key) && !abortEarly) {\n                    return true;\n                }\n                else if (_f.ref && action(_f.ref, _f.name) && !abortEarly) {\n                    return true;\n                }\n                else {\n                    if (iterateFieldsByAction(currentField, action)) {\n                        break;\n                    }\n                }\n            }\n            else if (isObject(currentField)) {\n                if (iterateFieldsByAction(currentField, action)) {\n                    break;\n                }\n            }\n        }\n    }\n    return;\n};\n\nvar updateFieldArrayRootError = (errors, error, name) => {\n    const fieldArrayErrors = convertToArrayPayload(get(errors, name));\n    set(fieldArrayErrors, 'root', error[name]);\n    set(errors, name, fieldArrayErrors);\n    return errors;\n};\n\nvar isFileInput = (element) => element.type === 'file';\n\nvar isFunction = (value) => typeof value === 'function';\n\nvar isHTMLElement = (value) => {\n    if (!isWeb) {\n        return false;\n    }\n    const owner = value ? value.ownerDocument : 0;\n    return (value instanceof\n        (owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement));\n};\n\nvar isMessage = (value) => isString(value);\n\nvar isRadioInput = (element) => element.type === 'radio';\n\nvar isRegex = (value) => value instanceof RegExp;\n\nconst defaultResult = {\n    value: false,\n    isValid: false,\n};\nconst validResult = { value: true, isValid: true };\nvar getCheckboxValue = (options) => {\n    if (Array.isArray(options)) {\n        if (options.length > 1) {\n            const values = options\n                .filter((option) => option && option.checked && !option.disabled)\n                .map((option) => option.value);\n            return { value: values, isValid: !!values.length };\n        }\n        return options[0].checked && !options[0].disabled\n            ? // @ts-expect-error expected to work in the browser\n                options[0].attributes && !isUndefined(options[0].attributes.value)\n                    ? isUndefined(options[0].value) || options[0].value === ''\n                        ? validResult\n                        : { value: options[0].value, isValid: true }\n                    : validResult\n            : defaultResult;\n    }\n    return defaultResult;\n};\n\nconst defaultReturn = {\n    isValid: false,\n    value: null,\n};\nvar getRadioValue = (options) => Array.isArray(options)\n    ? options.reduce((previous, option) => option && option.checked && !option.disabled\n        ? {\n            isValid: true,\n            value: option.value,\n        }\n        : previous, defaultReturn)\n    : defaultReturn;\n\nfunction getValidateError(result, ref, type = 'validate') {\n    if (isMessage(result) ||\n        (Array.isArray(result) && result.every(isMessage)) ||\n        (isBoolean(result) && !result)) {\n        return {\n            type,\n            message: isMessage(result) ? result : '',\n            ref,\n        };\n    }\n}\n\nvar getValueAndMessage = (validationData) => isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n    };\n\nvar validateField = async (field, disabledFieldNames, formValues, validateAllFieldCriteria, shouldUseNativeValidation, isFieldArray) => {\n    const { ref, refs, required, maxLength, minLength, min, max, pattern, validate, name, valueAsNumber, mount, } = field._f;\n    const inputValue = get(formValues, name);\n    if (!mount || disabledFieldNames.has(name)) {\n        return {};\n    }\n    const inputRef = refs ? refs[0] : ref;\n    const setCustomValidity = (message) => {\n        if (shouldUseNativeValidation && inputRef.reportValidity) {\n            inputRef.setCustomValidity(isBoolean(message) ? '' : message || '');\n            inputRef.reportValidity();\n        }\n    };\n    const error = {};\n    const isRadio = isRadioInput(ref);\n    const isCheckBox = isCheckBoxInput(ref);\n    const isRadioOrCheckbox = isRadio || isCheckBox;\n    const isEmpty = ((valueAsNumber || isFileInput(ref)) &&\n        isUndefined(ref.value) &&\n        isUndefined(inputValue)) ||\n        (isHTMLElement(ref) && ref.value === '') ||\n        inputValue === '' ||\n        (Array.isArray(inputValue) && !inputValue.length);\n    const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\n    const getMinMaxMessage = (exceedMax, maxLengthMessage, minLengthMessage, maxType = INPUT_VALIDATION_RULES.maxLength, minType = INPUT_VALIDATION_RULES.minLength) => {\n        const message = exceedMax ? maxLengthMessage : minLengthMessage;\n        error[name] = {\n            type: exceedMax ? maxType : minType,\n            message,\n            ref,\n            ...appendErrorsCurry(exceedMax ? maxType : minType, message),\n        };\n    };\n    if (isFieldArray\n        ? !Array.isArray(inputValue) || !inputValue.length\n        : required &&\n            ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n                (isBoolean(inputValue) && !inputValue) ||\n                (isCheckBox && !getCheckboxValue(refs).isValid) ||\n                (isRadio && !getRadioValue(refs).isValid))) {\n        const { value, message } = isMessage(required)\n            ? { value: !!required, message: required }\n            : getValueAndMessage(required);\n        if (value) {\n            error[name] = {\n                type: INPUT_VALIDATION_RULES.required,\n                message,\n                ref: inputRef,\n                ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\n            };\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(message);\n                return error;\n            }\n        }\n    }\n    if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n        let exceedMax;\n        let exceedMin;\n        const maxOutput = getValueAndMessage(max);\n        const minOutput = getValueAndMessage(min);\n        if (!isNullOrUndefined(inputValue) && !isNaN(inputValue)) {\n            const valueNumber = ref.valueAsNumber ||\n                (inputValue ? +inputValue : inputValue);\n            if (!isNullOrUndefined(maxOutput.value)) {\n                exceedMax = valueNumber > maxOutput.value;\n            }\n            if (!isNullOrUndefined(minOutput.value)) {\n                exceedMin = valueNumber < minOutput.value;\n            }\n        }\n        else {\n            const valueDate = ref.valueAsDate || new Date(inputValue);\n            const convertTimeToDate = (time) => new Date(new Date().toDateString() + ' ' + time);\n            const isTime = ref.type == 'time';\n            const isWeek = ref.type == 'week';\n            if (isString(maxOutput.value) && inputValue) {\n                exceedMax = isTime\n                    ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value)\n                    : isWeek\n                        ? inputValue > maxOutput.value\n                        : valueDate > new Date(maxOutput.value);\n            }\n            if (isString(minOutput.value) && inputValue) {\n                exceedMin = isTime\n                    ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value)\n                    : isWeek\n                        ? inputValue < minOutput.value\n                        : valueDate < new Date(minOutput.value);\n            }\n        }\n        if (exceedMax || exceedMin) {\n            getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(error[name].message);\n                return error;\n            }\n        }\n    }\n    if ((maxLength || minLength) &&\n        !isEmpty &&\n        (isString(inputValue) || (isFieldArray && Array.isArray(inputValue)))) {\n        const maxLengthOutput = getValueAndMessage(maxLength);\n        const minLengthOutput = getValueAndMessage(minLength);\n        const exceedMax = !isNullOrUndefined(maxLengthOutput.value) &&\n            inputValue.length > +maxLengthOutput.value;\n        const exceedMin = !isNullOrUndefined(minLengthOutput.value) &&\n            inputValue.length < +minLengthOutput.value;\n        if (exceedMax || exceedMin) {\n            getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(error[name].message);\n                return error;\n            }\n        }\n    }\n    if (pattern && !isEmpty && isString(inputValue)) {\n        const { value: patternValue, message } = getValueAndMessage(pattern);\n        if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n            error[name] = {\n                type: INPUT_VALIDATION_RULES.pattern,\n                message,\n                ref,\n                ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\n            };\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(message);\n                return error;\n            }\n        }\n    }\n    if (validate) {\n        if (isFunction(validate)) {\n            const result = await validate(inputValue, formValues);\n            const validateError = getValidateError(result, inputRef);\n            if (validateError) {\n                error[name] = {\n                    ...validateError,\n                    ...appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message),\n                };\n                if (!validateAllFieldCriteria) {\n                    setCustomValidity(validateError.message);\n                    return error;\n                }\n            }\n        }\n        else if (isObject(validate)) {\n            let validationResult = {};\n            for (const key in validate) {\n                if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n                    break;\n                }\n                const validateError = getValidateError(await validate[key](inputValue, formValues), inputRef, key);\n                if (validateError) {\n                    validationResult = {\n                        ...validateError,\n                        ...appendErrorsCurry(key, validateError.message),\n                    };\n                    setCustomValidity(validateError.message);\n                    if (validateAllFieldCriteria) {\n                        error[name] = validationResult;\n                    }\n                }\n            }\n            if (!isEmptyObject(validationResult)) {\n                error[name] = {\n                    ref: inputRef,\n                    ...validationResult,\n                };\n                if (!validateAllFieldCriteria) {\n                    return error;\n                }\n            }\n        }\n    }\n    setCustomValidity(true);\n    return error;\n};\n\nvar appendAt = (data, value) => [\n    ...data,\n    ...convertToArrayPayload(value),\n];\n\nvar fillEmptyArray = (value) => Array.isArray(value) ? value.map(() => undefined) : undefined;\n\nfunction insert(data, index, value) {\n    return [\n        ...data.slice(0, index),\n        ...convertToArrayPayload(value),\n        ...data.slice(index),\n    ];\n}\n\nvar moveArrayAt = (data, from, to) => {\n    if (!Array.isArray(data)) {\n        return [];\n    }\n    if (isUndefined(data[to])) {\n        data[to] = undefined;\n    }\n    data.splice(to, 0, data.splice(from, 1)[0]);\n    return data;\n};\n\nvar prependAt = (data, value) => [\n    ...convertToArrayPayload(value),\n    ...convertToArrayPayload(data),\n];\n\nfunction removeAtIndexes(data, indexes) {\n    let i = 0;\n    const temp = [...data];\n    for (const index of indexes) {\n        temp.splice(index - i, 1);\n        i++;\n    }\n    return compact(temp).length ? temp : [];\n}\nvar removeArrayAt = (data, index) => isUndefined(index)\n    ? []\n    : removeAtIndexes(data, convertToArrayPayload(index).sort((a, b) => a - b));\n\nvar swapArrayAt = (data, indexA, indexB) => {\n    [data[indexA], data[indexB]] = [data[indexB], data[indexA]];\n};\n\nfunction baseGet(object, updatePath) {\n    const length = updatePath.slice(0, -1).length;\n    let index = 0;\n    while (index < length) {\n        object = isUndefined(object) ? index++ : object[updatePath[index++]];\n    }\n    return object;\n}\nfunction isEmptyArray(obj) {\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key) && !isUndefined(obj[key])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction unset(object, path) {\n    const paths = Array.isArray(path)\n        ? path\n        : isKey(path)\n            ? [path]\n            : stringToPath(path);\n    const childObject = paths.length === 1 ? object : baseGet(object, paths);\n    const index = paths.length - 1;\n    const key = paths[index];\n    if (childObject) {\n        delete childObject[key];\n    }\n    if (index !== 0 &&\n        ((isObject(childObject) && isEmptyObject(childObject)) ||\n            (Array.isArray(childObject) && isEmptyArray(childObject)))) {\n        unset(object, paths.slice(0, -1));\n    }\n    return object;\n}\n\nvar updateAt = (fieldValues, index, value) => {\n    fieldValues[index] = value;\n    return fieldValues;\n};\n\n/**\n * A custom hook that exposes convenient methods to perform operations with a list of dynamic inputs that need to be appended, updated, removed etc. • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn) • [Video](https://youtu.be/4MrbfGSFY2A)\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usefieldarray) • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn)\n *\n * @param props - useFieldArray props\n *\n * @returns methods - functions to manipulate with the Field Arrays (dynamic inputs) {@link UseFieldArrayReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, control, handleSubmit, reset, trigger, setError } = useForm({\n *     defaultValues: {\n *       test: []\n *     }\n *   });\n *   const { fields, append } = useFieldArray({\n *     control,\n *     name: \"test\"\n *   });\n *\n *   return (\n *     <form onSubmit={handleSubmit(data => console.log(data))}>\n *       {fields.map((item, index) => (\n *          <input key={item.id} {...register(`test.${index}.firstName`)}  />\n *       ))}\n *       <button type=\"button\" onClick={() => append({ firstName: \"bill\" })}>\n *         append\n *       </button>\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFieldArray(props) {\n    const methods = useFormContext();\n    const { control = methods.control, name, keyName = 'id', shouldUnregister, rules, } = props;\n    const [fields, setFields] = React.useState(control._getFieldArray(name));\n    const ids = React.useRef(control._getFieldArray(name).map(generateId));\n    const _fieldIds = React.useRef(fields);\n    const _name = React.useRef(name);\n    const _actioned = React.useRef(false);\n    _name.current = name;\n    _fieldIds.current = fields;\n    control._names.array.add(name);\n    rules &&\n        control.register(name, rules);\n    useSubscribe({\n        next: ({ values, name: fieldArrayName, }) => {\n            if (fieldArrayName === _name.current || !fieldArrayName) {\n                const fieldValues = get(values, _name.current);\n                if (Array.isArray(fieldValues)) {\n                    setFields(fieldValues);\n                    ids.current = fieldValues.map(generateId);\n                }\n            }\n        },\n        subject: control._subjects.array,\n    });\n    const updateValues = React.useCallback((updatedFieldArrayValues) => {\n        _actioned.current = true;\n        control._updateFieldArray(name, updatedFieldArrayValues);\n    }, [control, name]);\n    const append = (value, options) => {\n        const appendValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = appendAt(control._getFieldArray(name), appendValue);\n        control._names.focus = getFocusFieldName(name, updatedFieldArrayValues.length - 1, options);\n        ids.current = appendAt(ids.current, appendValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, appendAt, {\n            argA: fillEmptyArray(value),\n        });\n    };\n    const prepend = (value, options) => {\n        const prependValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = prependAt(control._getFieldArray(name), prependValue);\n        control._names.focus = getFocusFieldName(name, 0, options);\n        ids.current = prependAt(ids.current, prependValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, prependAt, {\n            argA: fillEmptyArray(value),\n        });\n    };\n    const remove = (index) => {\n        const updatedFieldArrayValues = removeArrayAt(control._getFieldArray(name), index);\n        ids.current = removeArrayAt(ids.current, index);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        !Array.isArray(get(control._fields, name)) &&\n            set(control._fields, name, undefined);\n        control._updateFieldArray(name, updatedFieldArrayValues, removeArrayAt, {\n            argA: index,\n        });\n    };\n    const insert$1 = (index, value, options) => {\n        const insertValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = insert(control._getFieldArray(name), index, insertValue);\n        control._names.focus = getFocusFieldName(name, index, options);\n        ids.current = insert(ids.current, index, insertValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, insert, {\n            argA: index,\n            argB: fillEmptyArray(value),\n        });\n    };\n    const swap = (indexA, indexB) => {\n        const updatedFieldArrayValues = control._getFieldArray(name);\n        swapArrayAt(updatedFieldArrayValues, indexA, indexB);\n        swapArrayAt(ids.current, indexA, indexB);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, swapArrayAt, {\n            argA: indexA,\n            argB: indexB,\n        }, false);\n    };\n    const move = (from, to) => {\n        const updatedFieldArrayValues = control._getFieldArray(name);\n        moveArrayAt(updatedFieldArrayValues, from, to);\n        moveArrayAt(ids.current, from, to);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._updateFieldArray(name, updatedFieldArrayValues, moveArrayAt, {\n            argA: from,\n            argB: to,\n        }, false);\n    };\n    const update = (index, value) => {\n        const updateValue = cloneObject(value);\n        const updatedFieldArrayValues = updateAt(control._getFieldArray(name), index, updateValue);\n        ids.current = [...updatedFieldArrayValues].map((item, i) => !item || i === index ? generateId() : ids.current[i]);\n        updateValues(updatedFieldArrayValues);\n        setFields([...updatedFieldArrayValues]);\n        control._updateFieldArray(name, updatedFieldArrayValues, updateAt, {\n            argA: index,\n            argB: updateValue,\n        }, true, false);\n    };\n    const replace = (value) => {\n        const updatedFieldArrayValues = convertToArrayPayload(cloneObject(value));\n        ids.current = updatedFieldArrayValues.map(generateId);\n        updateValues([...updatedFieldArrayValues]);\n        setFields([...updatedFieldArrayValues]);\n        control._updateFieldArray(name, [...updatedFieldArrayValues], (data) => data, {}, true, false);\n    };\n    React.useEffect(() => {\n        control._state.action = false;\n        isWatched(name, control._names) &&\n            control._subjects.state.next({\n                ...control._formState,\n            });\n        if (_actioned.current &&\n            (!getValidationModes(control._options.mode).isOnSubmit ||\n                control._formState.isSubmitted)) {\n            if (control._options.resolver) {\n                control._executeSchema([name]).then((result) => {\n                    const error = get(result.errors, name);\n                    const existingError = get(control._formState.errors, name);\n                    if (existingError\n                        ? (!error && existingError.type) ||\n                            (error &&\n                                (existingError.type !== error.type ||\n                                    existingError.message !== error.message))\n                        : error && error.type) {\n                        error\n                            ? set(control._formState.errors, name, error)\n                            : unset(control._formState.errors, name);\n                        control._subjects.state.next({\n                            errors: control._formState.errors,\n                        });\n                    }\n                });\n            }\n            else {\n                const field = get(control._fields, name);\n                if (field &&\n                    field._f &&\n                    !(getValidationModes(control._options.reValidateMode).isOnSubmit &&\n                        getValidationModes(control._options.mode).isOnSubmit)) {\n                    validateField(field, control._names.disabled, control._formValues, control._options.criteriaMode === VALIDATION_MODE.all, control._options.shouldUseNativeValidation, true).then((error) => !isEmptyObject(error) &&\n                        control._subjects.state.next({\n                            errors: updateFieldArrayRootError(control._formState.errors, error, name),\n                        }));\n                }\n            }\n        }\n        control._subjects.values.next({\n            name,\n            values: { ...control._formValues },\n        });\n        control._names.focus &&\n            iterateFieldsByAction(control._fields, (ref, key) => {\n                if (control._names.focus &&\n                    key.startsWith(control._names.focus) &&\n                    ref.focus) {\n                    ref.focus();\n                    return 1;\n                }\n                return;\n            });\n        control._names.focus = '';\n        control._updateValid();\n        _actioned.current = false;\n    }, [fields, name, control]);\n    React.useEffect(() => {\n        !get(control._formValues, name) && control._updateFieldArray(name);\n        return () => {\n            (control._options.shouldUnregister || shouldUnregister) &&\n                control.unregister(name);\n        };\n    }, [name, control, keyName, shouldUnregister]);\n    return {\n        swap: React.useCallback(swap, [updateValues, name, control]),\n        move: React.useCallback(move, [updateValues, name, control]),\n        prepend: React.useCallback(prepend, [updateValues, name, control]),\n        append: React.useCallback(append, [updateValues, name, control]),\n        remove: React.useCallback(remove, [updateValues, name, control]),\n        insert: React.useCallback(insert$1, [updateValues, name, control]),\n        update: React.useCallback(update, [updateValues, name, control]),\n        replace: React.useCallback(replace, [updateValues, name, control]),\n        fields: React.useMemo(() => fields.map((field, index) => ({\n            ...field,\n            [keyName]: ids.current[index] || generateId(),\n        })), [fields, keyName]),\n    };\n}\n\nvar createSubject = () => {\n    let _observers = [];\n    const next = (value) => {\n        for (const observer of _observers) {\n            observer.next && observer.next(value);\n        }\n    };\n    const subscribe = (observer) => {\n        _observers.push(observer);\n        return {\n            unsubscribe: () => {\n                _observers = _observers.filter((o) => o !== observer);\n            },\n        };\n    };\n    const unsubscribe = () => {\n        _observers = [];\n    };\n    return {\n        get observers() {\n            return _observers;\n        },\n        next,\n        subscribe,\n        unsubscribe,\n    };\n};\n\nvar isPrimitive = (value) => isNullOrUndefined(value) || !isObjectType(value);\n\nfunction deepEqual(object1, object2) {\n    if (isPrimitive(object1) || isPrimitive(object2)) {\n        return object1 === object2;\n    }\n    if (isDateObject(object1) && isDateObject(object2)) {\n        return object1.getTime() === object2.getTime();\n    }\n    const keys1 = Object.keys(object1);\n    const keys2 = Object.keys(object2);\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const val1 = object1[key];\n        if (!keys2.includes(key)) {\n            return false;\n        }\n        if (key !== 'ref') {\n            const val2 = object2[key];\n            if ((isDateObject(val1) && isDateObject(val2)) ||\n                (isObject(val1) && isObject(val2)) ||\n                (Array.isArray(val1) && Array.isArray(val2))\n                ? !deepEqual(val1, val2)\n                : val1 !== val2) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\nvar isMultipleSelect = (element) => element.type === `select-multiple`;\n\nvar isRadioOrCheckbox = (ref) => isRadioInput(ref) || isCheckBoxInput(ref);\n\nvar live = (ref) => isHTMLElement(ref) && ref.isConnected;\n\nvar objectHasFunction = (data) => {\n    for (const key in data) {\n        if (isFunction(data[key])) {\n            return true;\n        }\n    }\n    return false;\n};\n\nfunction markFieldsDirty(data, fields = {}) {\n    const isParentNodeArray = Array.isArray(data);\n    if (isObject(data) || isParentNodeArray) {\n        for (const key in data) {\n            if (Array.isArray(data[key]) ||\n                (isObject(data[key]) && !objectHasFunction(data[key]))) {\n                fields[key] = Array.isArray(data[key]) ? [] : {};\n                markFieldsDirty(data[key], fields[key]);\n            }\n            else if (!isNullOrUndefined(data[key])) {\n                fields[key] = true;\n            }\n        }\n    }\n    return fields;\n}\nfunction getDirtyFieldsFromDefaultValues(data, formValues, dirtyFieldsFromValues) {\n    const isParentNodeArray = Array.isArray(data);\n    if (isObject(data) || isParentNodeArray) {\n        for (const key in data) {\n            if (Array.isArray(data[key]) ||\n                (isObject(data[key]) && !objectHasFunction(data[key]))) {\n                if (isUndefined(formValues) ||\n                    isPrimitive(dirtyFieldsFromValues[key])) {\n                    dirtyFieldsFromValues[key] = Array.isArray(data[key])\n                        ? markFieldsDirty(data[key], [])\n                        : { ...markFieldsDirty(data[key]) };\n                }\n                else {\n                    getDirtyFieldsFromDefaultValues(data[key], isNullOrUndefined(formValues) ? {} : formValues[key], dirtyFieldsFromValues[key]);\n                }\n            }\n            else {\n                dirtyFieldsFromValues[key] = !deepEqual(data[key], formValues[key]);\n            }\n        }\n    }\n    return dirtyFieldsFromValues;\n}\nvar getDirtyFields = (defaultValues, formValues) => getDirtyFieldsFromDefaultValues(defaultValues, formValues, markFieldsDirty(formValues));\n\nvar getFieldValueAs = (value, { valueAsNumber, valueAsDate, setValueAs }) => isUndefined(value)\n    ? value\n    : valueAsNumber\n        ? value === ''\n            ? NaN\n            : value\n                ? +value\n                : value\n        : valueAsDate && isString(value)\n            ? new Date(value)\n            : setValueAs\n                ? setValueAs(value)\n                : value;\n\nfunction getFieldValue(_f) {\n    const ref = _f.ref;\n    if (isFileInput(ref)) {\n        return ref.files;\n    }\n    if (isRadioInput(ref)) {\n        return getRadioValue(_f.refs).value;\n    }\n    if (isMultipleSelect(ref)) {\n        return [...ref.selectedOptions].map(({ value }) => value);\n    }\n    if (isCheckBoxInput(ref)) {\n        return getCheckboxValue(_f.refs).value;\n    }\n    return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\n\nvar getResolverOptions = (fieldsNames, _fields, criteriaMode, shouldUseNativeValidation) => {\n    const fields = {};\n    for (const name of fieldsNames) {\n        const field = get(_fields, name);\n        field && set(fields, name, field._f);\n    }\n    return {\n        criteriaMode,\n        names: [...fieldsNames],\n        fields,\n        shouldUseNativeValidation,\n    };\n};\n\nvar getRuleValue = (rule) => isUndefined(rule)\n    ? rule\n    : isRegex(rule)\n        ? rule.source\n        : isObject(rule)\n            ? isRegex(rule.value)\n                ? rule.value.source\n                : rule.value\n            : rule;\n\nconst ASYNC_FUNCTION = 'AsyncFunction';\nvar hasPromiseValidation = (fieldReference) => !!fieldReference &&\n    !!fieldReference.validate &&\n    !!((isFunction(fieldReference.validate) &&\n        fieldReference.validate.constructor.name === ASYNC_FUNCTION) ||\n        (isObject(fieldReference.validate) &&\n            Object.values(fieldReference.validate).find((validateFunction) => validateFunction.constructor.name === ASYNC_FUNCTION)));\n\nvar hasValidation = (options) => options.mount &&\n    (options.required ||\n        options.min ||\n        options.max ||\n        options.maxLength ||\n        options.minLength ||\n        options.pattern ||\n        options.validate);\n\nfunction schemaErrorLookup(errors, _fields, name) {\n    const error = get(errors, name);\n    if (error || isKey(name)) {\n        return {\n            error,\n            name,\n        };\n    }\n    const names = name.split('.');\n    while (names.length) {\n        const fieldName = names.join('.');\n        const field = get(_fields, fieldName);\n        const foundError = get(errors, fieldName);\n        if (field && !Array.isArray(field) && name !== fieldName) {\n            return { name };\n        }\n        if (foundError && foundError.type) {\n            return {\n                name: fieldName,\n                error: foundError,\n            };\n        }\n        names.pop();\n    }\n    return {\n        name,\n    };\n}\n\nvar skipValidation = (isBlurEvent, isTouched, isSubmitted, reValidateMode, mode) => {\n    if (mode.isOnAll) {\n        return false;\n    }\n    else if (!isSubmitted && mode.isOnTouch) {\n        return !(isTouched || isBlurEvent);\n    }\n    else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n        return !isBlurEvent;\n    }\n    else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n        return isBlurEvent;\n    }\n    return true;\n};\n\nvar unsetEmptyArray = (ref, name) => !compact(get(ref, name)).length && unset(ref, name);\n\nconst defaultOptions = {\n    mode: VALIDATION_MODE.onSubmit,\n    reValidateMode: VALIDATION_MODE.onChange,\n    shouldFocusError: true,\n};\nfunction createFormControl(props = {}) {\n    let _options = {\n        ...defaultOptions,\n        ...props,\n    };\n    let _formState = {\n        submitCount: 0,\n        isDirty: false,\n        isLoading: isFunction(_options.defaultValues),\n        isValidating: false,\n        isSubmitted: false,\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        touchedFields: {},\n        dirtyFields: {},\n        validatingFields: {},\n        errors: _options.errors || {},\n        disabled: _options.disabled || false,\n    };\n    let _fields = {};\n    let _defaultValues = isObject(_options.defaultValues) || isObject(_options.values)\n        ? cloneObject(_options.defaultValues || _options.values) || {}\n        : {};\n    let _formValues = _options.shouldUnregister\n        ? {}\n        : cloneObject(_defaultValues);\n    let _state = {\n        action: false,\n        mount: false,\n        watch: false,\n    };\n    let _names = {\n        mount: new Set(),\n        disabled: new Set(),\n        unMount: new Set(),\n        array: new Set(),\n        watch: new Set(),\n    };\n    let delayErrorCallback;\n    let timer = 0;\n    const _proxyFormState = {\n        isDirty: false,\n        dirtyFields: false,\n        validatingFields: false,\n        touchedFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    };\n    const _subjects = {\n        values: createSubject(),\n        array: createSubject(),\n        state: createSubject(),\n    };\n    const validationModeBeforeSubmit = getValidationModes(_options.mode);\n    const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\n    const shouldDisplayAllAssociatedErrors = _options.criteriaMode === VALIDATION_MODE.all;\n    const debounce = (callback) => (wait) => {\n        clearTimeout(timer);\n        timer = setTimeout(callback, wait);\n    };\n    const _updateValid = async (shouldUpdateValid) => {\n        if (!_options.disabled && (_proxyFormState.isValid || shouldUpdateValid)) {\n            const isValid = _options.resolver\n                ? isEmptyObject((await _executeSchema()).errors)\n                : await executeBuiltInValidation(_fields, true);\n            if (isValid !== _formState.isValid) {\n                _subjects.state.next({\n                    isValid,\n                });\n            }\n        }\n    };\n    const _updateIsValidating = (names, isValidating) => {\n        if (!_options.disabled &&\n            (_proxyFormState.isValidating || _proxyFormState.validatingFields)) {\n            (names || Array.from(_names.mount)).forEach((name) => {\n                if (name) {\n                    isValidating\n                        ? set(_formState.validatingFields, name, isValidating)\n                        : unset(_formState.validatingFields, name);\n                }\n            });\n            _subjects.state.next({\n                validatingFields: _formState.validatingFields,\n                isValidating: !isEmptyObject(_formState.validatingFields),\n            });\n        }\n    };\n    const _updateFieldArray = (name, values = [], method, args, shouldSetValues = true, shouldUpdateFieldsAndState = true) => {\n        if (args && method && !_options.disabled) {\n            _state.action = true;\n            if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {\n                const fieldValues = method(get(_fields, name), args.argA, args.argB);\n                shouldSetValues && set(_fields, name, fieldValues);\n            }\n            if (shouldUpdateFieldsAndState &&\n                Array.isArray(get(_formState.errors, name))) {\n                const errors = method(get(_formState.errors, name), args.argA, args.argB);\n                shouldSetValues && set(_formState.errors, name, errors);\n                unsetEmptyArray(_formState.errors, name);\n            }\n            if (_proxyFormState.touchedFields &&\n                shouldUpdateFieldsAndState &&\n                Array.isArray(get(_formState.touchedFields, name))) {\n                const touchedFields = method(get(_formState.touchedFields, name), args.argA, args.argB);\n                shouldSetValues && set(_formState.touchedFields, name, touchedFields);\n            }\n            if (_proxyFormState.dirtyFields) {\n                _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n            }\n            _subjects.state.next({\n                name,\n                isDirty: _getDirty(name, values),\n                dirtyFields: _formState.dirtyFields,\n                errors: _formState.errors,\n                isValid: _formState.isValid,\n            });\n        }\n        else {\n            set(_formValues, name, values);\n        }\n    };\n    const updateErrors = (name, error) => {\n        set(_formState.errors, name, error);\n        _subjects.state.next({\n            errors: _formState.errors,\n        });\n    };\n    const _setErrors = (errors) => {\n        _formState.errors = errors;\n        _subjects.state.next({\n            errors: _formState.errors,\n            isValid: false,\n        });\n    };\n    const updateValidAndValue = (name, shouldSkipSetValueAs, value, ref) => {\n        const field = get(_fields, name);\n        if (field) {\n            const defaultValue = get(_formValues, name, isUndefined(value) ? get(_defaultValues, name) : value);\n            isUndefined(defaultValue) ||\n                (ref && ref.defaultChecked) ||\n                shouldSkipSetValueAs\n                ? set(_formValues, name, shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f))\n                : setFieldValue(name, defaultValue);\n            _state.mount && _updateValid();\n        }\n    };\n    const updateTouchAndDirty = (name, fieldValue, isBlurEvent, shouldDirty, shouldRender) => {\n        let shouldUpdateField = false;\n        let isPreviousDirty = false;\n        const output = {\n            name,\n        };\n        if (!_options.disabled) {\n            const disabledField = !!(get(_fields, name) &&\n                get(_fields, name)._f &&\n                get(_fields, name)._f.disabled);\n            if (!isBlurEvent || shouldDirty) {\n                if (_proxyFormState.isDirty) {\n                    isPreviousDirty = _formState.isDirty;\n                    _formState.isDirty = output.isDirty = _getDirty();\n                    shouldUpdateField = isPreviousDirty !== output.isDirty;\n                }\n                const isCurrentFieldPristine = disabledField || deepEqual(get(_defaultValues, name), fieldValue);\n                isPreviousDirty = !!(!disabledField && get(_formState.dirtyFields, name));\n                isCurrentFieldPristine || disabledField\n                    ? unset(_formState.dirtyFields, name)\n                    : set(_formState.dirtyFields, name, true);\n                output.dirtyFields = _formState.dirtyFields;\n                shouldUpdateField =\n                    shouldUpdateField ||\n                        (_proxyFormState.dirtyFields &&\n                            isPreviousDirty !== !isCurrentFieldPristine);\n            }\n            if (isBlurEvent) {\n                const isPreviousFieldTouched = get(_formState.touchedFields, name);\n                if (!isPreviousFieldTouched) {\n                    set(_formState.touchedFields, name, isBlurEvent);\n                    output.touchedFields = _formState.touchedFields;\n                    shouldUpdateField =\n                        shouldUpdateField ||\n                            (_proxyFormState.touchedFields &&\n                                isPreviousFieldTouched !== isBlurEvent);\n                }\n            }\n            shouldUpdateField && shouldRender && _subjects.state.next(output);\n        }\n        return shouldUpdateField ? output : {};\n    };\n    const shouldRenderByError = (name, isValid, error, fieldState) => {\n        const previousFieldError = get(_formState.errors, name);\n        const shouldUpdateValid = _proxyFormState.isValid &&\n            isBoolean(isValid) &&\n            _formState.isValid !== isValid;\n        if (_options.delayError && error) {\n            delayErrorCallback = debounce(() => updateErrors(name, error));\n            delayErrorCallback(_options.delayError);\n        }\n        else {\n            clearTimeout(timer);\n            delayErrorCallback = null;\n            error\n                ? set(_formState.errors, name, error)\n                : unset(_formState.errors, name);\n        }\n        if ((error ? !deepEqual(previousFieldError, error) : previousFieldError) ||\n            !isEmptyObject(fieldState) ||\n            shouldUpdateValid) {\n            const updatedFormState = {\n                ...fieldState,\n                ...(shouldUpdateValid && isBoolean(isValid) ? { isValid } : {}),\n                errors: _formState.errors,\n                name,\n            };\n            _formState = {\n                ..._formState,\n                ...updatedFormState,\n            };\n            _subjects.state.next(updatedFormState);\n        }\n    };\n    const _executeSchema = async (name) => {\n        _updateIsValidating(name, true);\n        const result = await _options.resolver(_formValues, _options.context, getResolverOptions(name || _names.mount, _fields, _options.criteriaMode, _options.shouldUseNativeValidation));\n        _updateIsValidating(name);\n        return result;\n    };\n    const executeSchemaAndUpdateState = async (names) => {\n        const { errors } = await _executeSchema(names);\n        if (names) {\n            for (const name of names) {\n                const error = get(errors, name);\n                error\n                    ? set(_formState.errors, name, error)\n                    : unset(_formState.errors, name);\n            }\n        }\n        else {\n            _formState.errors = errors;\n        }\n        return errors;\n    };\n    const executeBuiltInValidation = async (fields, shouldOnlyCheckValid, context = {\n        valid: true,\n    }) => {\n        for (const name in fields) {\n            const field = fields[name];\n            if (field) {\n                const { _f, ...fieldValue } = field;\n                if (_f) {\n                    const isFieldArrayRoot = _names.array.has(_f.name);\n                    const isPromiseFunction = field._f && hasPromiseValidation(field._f);\n                    if (isPromiseFunction && _proxyFormState.validatingFields) {\n                        _updateIsValidating([name], true);\n                    }\n                    const fieldError = await validateField(field, _names.disabled, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation && !shouldOnlyCheckValid, isFieldArrayRoot);\n                    if (isPromiseFunction && _proxyFormState.validatingFields) {\n                        _updateIsValidating([name]);\n                    }\n                    if (fieldError[_f.name]) {\n                        context.valid = false;\n                        if (shouldOnlyCheckValid) {\n                            break;\n                        }\n                    }\n                    !shouldOnlyCheckValid &&\n                        (get(fieldError, _f.name)\n                            ? isFieldArrayRoot\n                                ? updateFieldArrayRootError(_formState.errors, fieldError, _f.name)\n                                : set(_formState.errors, _f.name, fieldError[_f.name])\n                            : unset(_formState.errors, _f.name));\n                }\n                !isEmptyObject(fieldValue) &&\n                    (await executeBuiltInValidation(fieldValue, shouldOnlyCheckValid, context));\n            }\n        }\n        return context.valid;\n    };\n    const _removeUnmounted = () => {\n        for (const name of _names.unMount) {\n            const field = get(_fields, name);\n            field &&\n                (field._f.refs\n                    ? field._f.refs.every((ref) => !live(ref))\n                    : !live(field._f.ref)) &&\n                unregister(name);\n        }\n        _names.unMount = new Set();\n    };\n    const _getDirty = (name, data) => !_options.disabled &&\n        (name && data && set(_formValues, name, data),\n            !deepEqual(getValues(), _defaultValues));\n    const _getWatch = (names, defaultValue, isGlobal) => generateWatchOutput(names, _names, {\n        ...(_state.mount\n            ? _formValues\n            : isUndefined(defaultValue)\n                ? _defaultValues\n                : isString(names)\n                    ? { [names]: defaultValue }\n                    : defaultValue),\n    }, isGlobal, defaultValue);\n    const _getFieldArray = (name) => compact(get(_state.mount ? _formValues : _defaultValues, name, _options.shouldUnregister ? get(_defaultValues, name, []) : []));\n    const setFieldValue = (name, value, options = {}) => {\n        const field = get(_fields, name);\n        let fieldValue = value;\n        if (field) {\n            const fieldReference = field._f;\n            if (fieldReference) {\n                !fieldReference.disabled &&\n                    set(_formValues, name, getFieldValueAs(value, fieldReference));\n                fieldValue =\n                    isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)\n                        ? ''\n                        : value;\n                if (isMultipleSelect(fieldReference.ref)) {\n                    [...fieldReference.ref.options].forEach((optionRef) => (optionRef.selected = fieldValue.includes(optionRef.value)));\n                }\n                else if (fieldReference.refs) {\n                    if (isCheckBoxInput(fieldReference.ref)) {\n                        fieldReference.refs.length > 1\n                            ? fieldReference.refs.forEach((checkboxRef) => (!checkboxRef.defaultChecked || !checkboxRef.disabled) &&\n                                (checkboxRef.checked = Array.isArray(fieldValue)\n                                    ? !!fieldValue.find((data) => data === checkboxRef.value)\n                                    : fieldValue === checkboxRef.value))\n                            : fieldReference.refs[0] &&\n                                (fieldReference.refs[0].checked = !!fieldValue);\n                    }\n                    else {\n                        fieldReference.refs.forEach((radioRef) => (radioRef.checked = radioRef.value === fieldValue));\n                    }\n                }\n                else if (isFileInput(fieldReference.ref)) {\n                    fieldReference.ref.value = '';\n                }\n                else {\n                    fieldReference.ref.value = fieldValue;\n                    if (!fieldReference.ref.type) {\n                        _subjects.values.next({\n                            name,\n                            values: { ..._formValues },\n                        });\n                    }\n                }\n            }\n        }\n        (options.shouldDirty || options.shouldTouch) &&\n            updateTouchAndDirty(name, fieldValue, options.shouldTouch, options.shouldDirty, true);\n        options.shouldValidate && trigger(name);\n    };\n    const setValues = (name, value, options) => {\n        for (const fieldKey in value) {\n            const fieldValue = value[fieldKey];\n            const fieldName = `${name}.${fieldKey}`;\n            const field = get(_fields, fieldName);\n            (_names.array.has(name) ||\n                isObject(fieldValue) ||\n                (field && !field._f)) &&\n                !isDateObject(fieldValue)\n                ? setValues(fieldName, fieldValue, options)\n                : setFieldValue(fieldName, fieldValue, options);\n        }\n    };\n    const setValue = (name, value, options = {}) => {\n        const field = get(_fields, name);\n        const isFieldArray = _names.array.has(name);\n        const cloneValue = cloneObject(value);\n        set(_formValues, name, cloneValue);\n        if (isFieldArray) {\n            _subjects.array.next({\n                name,\n                values: { ..._formValues },\n            });\n            if ((_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\n                options.shouldDirty) {\n                _subjects.state.next({\n                    name,\n                    dirtyFields: getDirtyFields(_defaultValues, _formValues),\n                    isDirty: _getDirty(name, cloneValue),\n                });\n            }\n        }\n        else {\n            field && !field._f && !isNullOrUndefined(cloneValue)\n                ? setValues(name, cloneValue, options)\n                : setFieldValue(name, cloneValue, options);\n        }\n        isWatched(name, _names) && _subjects.state.next({ ..._formState });\n        _subjects.values.next({\n            name: _state.mount ? name : undefined,\n            values: { ..._formValues },\n        });\n    };\n    const onChange = async (event) => {\n        _state.mount = true;\n        const target = event.target;\n        let name = target.name;\n        let isFieldValueUpdated = true;\n        const field = get(_fields, name);\n        const getCurrentFieldValue = () => target.type ? getFieldValue(field._f) : getEventValue(event);\n        const _updateIsFieldValueUpdated = (fieldValue) => {\n            isFieldValueUpdated =\n                Number.isNaN(fieldValue) ||\n                    (isDateObject(fieldValue) && isNaN(fieldValue.getTime())) ||\n                    deepEqual(fieldValue, get(_formValues, name, fieldValue));\n        };\n        if (field) {\n            let error;\n            let isValid;\n            const fieldValue = getCurrentFieldValue();\n            const isBlurEvent = event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\n            const shouldSkipValidation = (!hasValidation(field._f) &&\n                !_options.resolver &&\n                !get(_formState.errors, name) &&\n                !field._f.deps) ||\n                skipValidation(isBlurEvent, get(_formState.touchedFields, name), _formState.isSubmitted, validationModeAfterSubmit, validationModeBeforeSubmit);\n            const watched = isWatched(name, _names, isBlurEvent);\n            set(_formValues, name, fieldValue);\n            if (isBlurEvent) {\n                field._f.onBlur && field._f.onBlur(event);\n                delayErrorCallback && delayErrorCallback(0);\n            }\n            else if (field._f.onChange) {\n                field._f.onChange(event);\n            }\n            const fieldState = updateTouchAndDirty(name, fieldValue, isBlurEvent, false);\n            const shouldRender = !isEmptyObject(fieldState) || watched;\n            !isBlurEvent &&\n                _subjects.values.next({\n                    name,\n                    type: event.type,\n                    values: { ..._formValues },\n                });\n            if (shouldSkipValidation) {\n                if (_proxyFormState.isValid) {\n                    if (_options.mode === 'onBlur' && isBlurEvent) {\n                        _updateValid();\n                    }\n                    else if (!isBlurEvent) {\n                        _updateValid();\n                    }\n                }\n                return (shouldRender &&\n                    _subjects.state.next({ name, ...(watched ? {} : fieldState) }));\n            }\n            !isBlurEvent && watched && _subjects.state.next({ ..._formState });\n            if (_options.resolver) {\n                const { errors } = await _executeSchema([name]);\n                _updateIsFieldValueUpdated(fieldValue);\n                if (isFieldValueUpdated) {\n                    const previousErrorLookupResult = schemaErrorLookup(_formState.errors, _fields, name);\n                    const errorLookupResult = schemaErrorLookup(errors, _fields, previousErrorLookupResult.name || name);\n                    error = errorLookupResult.error;\n                    name = errorLookupResult.name;\n                    isValid = isEmptyObject(errors);\n                }\n            }\n            else {\n                _updateIsValidating([name], true);\n                error = (await validateField(field, _names.disabled, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation))[name];\n                _updateIsValidating([name]);\n                _updateIsFieldValueUpdated(fieldValue);\n                if (isFieldValueUpdated) {\n                    if (error) {\n                        isValid = false;\n                    }\n                    else if (_proxyFormState.isValid) {\n                        isValid = await executeBuiltInValidation(_fields, true);\n                    }\n                }\n            }\n            if (isFieldValueUpdated) {\n                field._f.deps &&\n                    trigger(field._f.deps);\n                shouldRenderByError(name, isValid, error, fieldState);\n            }\n        }\n    };\n    const _focusInput = (ref, key) => {\n        if (get(_formState.errors, key) && ref.focus) {\n            ref.focus();\n            return 1;\n        }\n        return;\n    };\n    const trigger = async (name, options = {}) => {\n        let isValid;\n        let validationResult;\n        const fieldNames = convertToArrayPayload(name);\n        if (_options.resolver) {\n            const errors = await executeSchemaAndUpdateState(isUndefined(name) ? name : fieldNames);\n            isValid = isEmptyObject(errors);\n            validationResult = name\n                ? !fieldNames.some((name) => get(errors, name))\n                : isValid;\n        }\n        else if (name) {\n            validationResult = (await Promise.all(fieldNames.map(async (fieldName) => {\n                const field = get(_fields, fieldName);\n                return await executeBuiltInValidation(field && field._f ? { [fieldName]: field } : field);\n            }))).every(Boolean);\n            !(!validationResult && !_formState.isValid) && _updateValid();\n        }\n        else {\n            validationResult = isValid = await executeBuiltInValidation(_fields);\n        }\n        _subjects.state.next({\n            ...(!isString(name) ||\n                (_proxyFormState.isValid && isValid !== _formState.isValid)\n                ? {}\n                : { name }),\n            ...(_options.resolver || !name ? { isValid } : {}),\n            errors: _formState.errors,\n        });\n        options.shouldFocus &&\n            !validationResult &&\n            iterateFieldsByAction(_fields, _focusInput, name ? fieldNames : _names.mount);\n        return validationResult;\n    };\n    const getValues = (fieldNames) => {\n        const values = {\n            ...(_state.mount ? _formValues : _defaultValues),\n        };\n        return isUndefined(fieldNames)\n            ? values\n            : isString(fieldNames)\n                ? get(values, fieldNames)\n                : fieldNames.map((name) => get(values, name));\n    };\n    const getFieldState = (name, formState) => ({\n        invalid: !!get((formState || _formState).errors, name),\n        isDirty: !!get((formState || _formState).dirtyFields, name),\n        error: get((formState || _formState).errors, name),\n        isValidating: !!get(_formState.validatingFields, name),\n        isTouched: !!get((formState || _formState).touchedFields, name),\n    });\n    const clearErrors = (name) => {\n        name &&\n            convertToArrayPayload(name).forEach((inputName) => unset(_formState.errors, inputName));\n        _subjects.state.next({\n            errors: name ? _formState.errors : {},\n        });\n    };\n    const setError = (name, error, options) => {\n        const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\n        const currentError = get(_formState.errors, name) || {};\n        // Don't override existing error messages elsewhere in the object tree.\n        const { ref: currentRef, message, type, ...restOfErrorTree } = currentError;\n        set(_formState.errors, name, {\n            ...restOfErrorTree,\n            ...error,\n            ref,\n        });\n        _subjects.state.next({\n            name,\n            errors: _formState.errors,\n            isValid: false,\n        });\n        options && options.shouldFocus && ref && ref.focus && ref.focus();\n    };\n    const watch = (name, defaultValue) => isFunction(name)\n        ? _subjects.values.subscribe({\n            next: (payload) => name(_getWatch(undefined, defaultValue), payload),\n        })\n        : _getWatch(name, defaultValue, true);\n    const unregister = (name, options = {}) => {\n        for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\n            _names.mount.delete(fieldName);\n            _names.array.delete(fieldName);\n            if (!options.keepValue) {\n                unset(_fields, fieldName);\n                unset(_formValues, fieldName);\n            }\n            !options.keepError && unset(_formState.errors, fieldName);\n            !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n            !options.keepTouched && unset(_formState.touchedFields, fieldName);\n            !options.keepIsValidating &&\n                unset(_formState.validatingFields, fieldName);\n            !_options.shouldUnregister &&\n                !options.keepDefaultValue &&\n                unset(_defaultValues, fieldName);\n        }\n        _subjects.values.next({\n            values: { ..._formValues },\n        });\n        _subjects.state.next({\n            ..._formState,\n            ...(!options.keepDirty ? {} : { isDirty: _getDirty() }),\n        });\n        !options.keepIsValid && _updateValid();\n    };\n    const _updateDisabledField = ({ disabled, name, field, fields, }) => {\n        if ((isBoolean(disabled) && _state.mount) ||\n            !!disabled ||\n            _names.disabled.has(name)) {\n            disabled ? _names.disabled.add(name) : _names.disabled.delete(name);\n            updateTouchAndDirty(name, getFieldValue(field ? field._f : get(fields, name)._f), false, false, true);\n        }\n    };\n    const register = (name, options = {}) => {\n        let field = get(_fields, name);\n        const disabledIsDefined = isBoolean(options.disabled) || isBoolean(_options.disabled);\n        set(_fields, name, {\n            ...(field || {}),\n            _f: {\n                ...(field && field._f ? field._f : { ref: { name } }),\n                name,\n                mount: true,\n                ...options,\n            },\n        });\n        _names.mount.add(name);\n        if (field) {\n            _updateDisabledField({\n                field,\n                disabled: isBoolean(options.disabled)\n                    ? options.disabled\n                    : _options.disabled,\n                name,\n            });\n        }\n        else {\n            updateValidAndValue(name, true, options.value);\n        }\n        return {\n            ...(disabledIsDefined\n                ? { disabled: options.disabled || _options.disabled }\n                : {}),\n            ...(_options.progressive\n                ? {\n                    required: !!options.required,\n                    min: getRuleValue(options.min),\n                    max: getRuleValue(options.max),\n                    minLength: getRuleValue(options.minLength),\n                    maxLength: getRuleValue(options.maxLength),\n                    pattern: getRuleValue(options.pattern),\n                }\n                : {}),\n            name,\n            onChange,\n            onBlur: onChange,\n            ref: (ref) => {\n                if (ref) {\n                    register(name, options);\n                    field = get(_fields, name);\n                    const fieldRef = isUndefined(ref.value)\n                        ? ref.querySelectorAll\n                            ? ref.querySelectorAll('input,select,textarea')[0] || ref\n                            : ref\n                        : ref;\n                    const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\n                    const refs = field._f.refs || [];\n                    if (radioOrCheckbox\n                        ? refs.find((option) => option === fieldRef)\n                        : fieldRef === field._f.ref) {\n                        return;\n                    }\n                    set(_fields, name, {\n                        _f: {\n                            ...field._f,\n                            ...(radioOrCheckbox\n                                ? {\n                                    refs: [\n                                        ...refs.filter(live),\n                                        fieldRef,\n                                        ...(Array.isArray(get(_defaultValues, name)) ? [{}] : []),\n                                    ],\n                                    ref: { type: fieldRef.type, name },\n                                }\n                                : { ref: fieldRef }),\n                        },\n                    });\n                    updateValidAndValue(name, false, undefined, fieldRef);\n                }\n                else {\n                    field = get(_fields, name, {});\n                    if (field._f) {\n                        field._f.mount = false;\n                    }\n                    (_options.shouldUnregister || options.shouldUnregister) &&\n                        !(isNameInFieldArray(_names.array, name) && _state.action) &&\n                        _names.unMount.add(name);\n                }\n            },\n        };\n    };\n    const _focusError = () => _options.shouldFocusError &&\n        iterateFieldsByAction(_fields, _focusInput, _names.mount);\n    const _disableForm = (disabled) => {\n        if (isBoolean(disabled)) {\n            _subjects.state.next({ disabled });\n            iterateFieldsByAction(_fields, (ref, name) => {\n                const currentField = get(_fields, name);\n                if (currentField) {\n                    ref.disabled = currentField._f.disabled || disabled;\n                    if (Array.isArray(currentField._f.refs)) {\n                        currentField._f.refs.forEach((inputRef) => {\n                            inputRef.disabled = currentField._f.disabled || disabled;\n                        });\n                    }\n                }\n            }, 0, false);\n        }\n    };\n    const handleSubmit = (onValid, onInvalid) => async (e) => {\n        let onValidError = undefined;\n        if (e) {\n            e.preventDefault && e.preventDefault();\n            e.persist && e.persist();\n        }\n        let fieldValues = cloneObject(_formValues);\n        if (_names.disabled.size) {\n            for (const name of _names.disabled) {\n                set(fieldValues, name, undefined);\n            }\n        }\n        _subjects.state.next({\n            isSubmitting: true,\n        });\n        if (_options.resolver) {\n            const { errors, values } = await _executeSchema();\n            _formState.errors = errors;\n            fieldValues = values;\n        }\n        else {\n            await executeBuiltInValidation(_fields);\n        }\n        unset(_formState.errors, 'root');\n        if (isEmptyObject(_formState.errors)) {\n            _subjects.state.next({\n                errors: {},\n            });\n            try {\n                await onValid(fieldValues, e);\n            }\n            catch (error) {\n                onValidError = error;\n            }\n        }\n        else {\n            if (onInvalid) {\n                await onInvalid({ ..._formState.errors }, e);\n            }\n            _focusError();\n            setTimeout(_focusError);\n        }\n        _subjects.state.next({\n            isSubmitted: true,\n            isSubmitting: false,\n            isSubmitSuccessful: isEmptyObject(_formState.errors) && !onValidError,\n            submitCount: _formState.submitCount + 1,\n            errors: _formState.errors,\n        });\n        if (onValidError) {\n            throw onValidError;\n        }\n    };\n    const resetField = (name, options = {}) => {\n        if (get(_fields, name)) {\n            if (isUndefined(options.defaultValue)) {\n                setValue(name, cloneObject(get(_defaultValues, name)));\n            }\n            else {\n                setValue(name, options.defaultValue);\n                set(_defaultValues, name, cloneObject(options.defaultValue));\n            }\n            if (!options.keepTouched) {\n                unset(_formState.touchedFields, name);\n            }\n            if (!options.keepDirty) {\n                unset(_formState.dirtyFields, name);\n                _formState.isDirty = options.defaultValue\n                    ? _getDirty(name, cloneObject(get(_defaultValues, name)))\n                    : _getDirty();\n            }\n            if (!options.keepError) {\n                unset(_formState.errors, name);\n                _proxyFormState.isValid && _updateValid();\n            }\n            _subjects.state.next({ ..._formState });\n        }\n    };\n    const _reset = (formValues, keepStateOptions = {}) => {\n        const updatedValues = formValues ? cloneObject(formValues) : _defaultValues;\n        const cloneUpdatedValues = cloneObject(updatedValues);\n        const isEmptyResetValues = isEmptyObject(formValues);\n        const values = isEmptyResetValues ? _defaultValues : cloneUpdatedValues;\n        if (!keepStateOptions.keepDefaultValues) {\n            _defaultValues = updatedValues;\n        }\n        if (!keepStateOptions.keepValues) {\n            if (keepStateOptions.keepDirtyValues) {\n                const fieldsToCheck = new Set([\n                    ..._names.mount,\n                    ...Object.keys(getDirtyFields(_defaultValues, _formValues)),\n                ]);\n                for (const fieldName of Array.from(fieldsToCheck)) {\n                    get(_formState.dirtyFields, fieldName)\n                        ? set(values, fieldName, get(_formValues, fieldName))\n                        : setValue(fieldName, get(values, fieldName));\n                }\n            }\n            else {\n                if (isWeb && isUndefined(formValues)) {\n                    for (const name of _names.mount) {\n                        const field = get(_fields, name);\n                        if (field && field._f) {\n                            const fieldReference = Array.isArray(field._f.refs)\n                                ? field._f.refs[0]\n                                : field._f.ref;\n                            if (isHTMLElement(fieldReference)) {\n                                const form = fieldReference.closest('form');\n                                if (form) {\n                                    form.reset();\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n                _fields = {};\n            }\n            _formValues = _options.shouldUnregister\n                ? keepStateOptions.keepDefaultValues\n                    ? cloneObject(_defaultValues)\n                    : {}\n                : cloneObject(values);\n            _subjects.array.next({\n                values: { ...values },\n            });\n            _subjects.values.next({\n                values: { ...values },\n            });\n        }\n        _names = {\n            mount: keepStateOptions.keepDirtyValues ? _names.mount : new Set(),\n            unMount: new Set(),\n            array: new Set(),\n            disabled: new Set(),\n            watch: new Set(),\n            watchAll: false,\n            focus: '',\n        };\n        _state.mount =\n            !_proxyFormState.isValid ||\n                !!keepStateOptions.keepIsValid ||\n                !!keepStateOptions.keepDirtyValues;\n        _state.watch = !!_options.shouldUnregister;\n        _subjects.state.next({\n            submitCount: keepStateOptions.keepSubmitCount\n                ? _formState.submitCount\n                : 0,\n            isDirty: isEmptyResetValues\n                ? false\n                : keepStateOptions.keepDirty\n                    ? _formState.isDirty\n                    : !!(keepStateOptions.keepDefaultValues &&\n                        !deepEqual(formValues, _defaultValues)),\n            isSubmitted: keepStateOptions.keepIsSubmitted\n                ? _formState.isSubmitted\n                : false,\n            dirtyFields: isEmptyResetValues\n                ? {}\n                : keepStateOptions.keepDirtyValues\n                    ? keepStateOptions.keepDefaultValues && _formValues\n                        ? getDirtyFields(_defaultValues, _formValues)\n                        : _formState.dirtyFields\n                    : keepStateOptions.keepDefaultValues && formValues\n                        ? getDirtyFields(_defaultValues, formValues)\n                        : keepStateOptions.keepDirty\n                            ? _formState.dirtyFields\n                            : {},\n            touchedFields: keepStateOptions.keepTouched\n                ? _formState.touchedFields\n                : {},\n            errors: keepStateOptions.keepErrors ? _formState.errors : {},\n            isSubmitSuccessful: keepStateOptions.keepIsSubmitSuccessful\n                ? _formState.isSubmitSuccessful\n                : false,\n            isSubmitting: false,\n        });\n    };\n    const reset = (formValues, keepStateOptions) => _reset(isFunction(formValues)\n        ? formValues(_formValues)\n        : formValues, keepStateOptions);\n    const setFocus = (name, options = {}) => {\n        const field = get(_fields, name);\n        const fieldReference = field && field._f;\n        if (fieldReference) {\n            const fieldRef = fieldReference.refs\n                ? fieldReference.refs[0]\n                : fieldReference.ref;\n            if (fieldRef.focus) {\n                fieldRef.focus();\n                options.shouldSelect &&\n                    isFunction(fieldRef.select) &&\n                    fieldRef.select();\n            }\n        }\n    };\n    const _updateFormState = (updatedFormState) => {\n        _formState = {\n            ..._formState,\n            ...updatedFormState,\n        };\n    };\n    const _resetDefaultValues = () => isFunction(_options.defaultValues) &&\n        _options.defaultValues().then((values) => {\n            reset(values, _options.resetOptions);\n            _subjects.state.next({\n                isLoading: false,\n            });\n        });\n    return {\n        control: {\n            register,\n            unregister,\n            getFieldState,\n            handleSubmit,\n            setError,\n            _executeSchema,\n            _getWatch,\n            _getDirty,\n            _updateValid,\n            _removeUnmounted,\n            _updateFieldArray,\n            _updateDisabledField,\n            _getFieldArray,\n            _reset,\n            _resetDefaultValues,\n            _updateFormState,\n            _disableForm,\n            _subjects,\n            _proxyFormState,\n            _setErrors,\n            get _fields() {\n                return _fields;\n            },\n            get _formValues() {\n                return _formValues;\n            },\n            get _state() {\n                return _state;\n            },\n            set _state(value) {\n                _state = value;\n            },\n            get _defaultValues() {\n                return _defaultValues;\n            },\n            get _names() {\n                return _names;\n            },\n            set _names(value) {\n                _names = value;\n            },\n            get _formState() {\n                return _formState;\n            },\n            set _formState(value) {\n                _formState = value;\n            },\n            get _options() {\n                return _options;\n            },\n            set _options(value) {\n                _options = {\n                    ..._options,\n                    ...value,\n                };\n            },\n        },\n        trigger,\n        register,\n        handleSubmit,\n        watch,\n        setValue,\n        getValues,\n        reset,\n        resetField,\n        clearErrors,\n        unregister,\n        setError,\n        setFocus,\n        getFieldState,\n    };\n}\n\n/**\n * Custom hook to manage the entire form.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\n *\n * @param props - form configuration and validation parameters.\n *\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   console.log(watch(\"example\"));\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input defaultValue=\"test\" {...register(\"example\")} />\n *       <input {...register(\"exampleRequired\", { required: true })} />\n *       {errors.exampleRequired && <span>This field is required</span>}\n *       <button>Submit</button>\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useForm(props = {}) {\n    const _formControl = React.useRef(undefined);\n    const _values = React.useRef(undefined);\n    const [formState, updateFormState] = React.useState({\n        isDirty: false,\n        isValidating: false,\n        isLoading: isFunction(props.defaultValues),\n        isSubmitted: false,\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        submitCount: 0,\n        dirtyFields: {},\n        touchedFields: {},\n        validatingFields: {},\n        errors: props.errors || {},\n        disabled: props.disabled || false,\n        defaultValues: isFunction(props.defaultValues)\n            ? undefined\n            : props.defaultValues,\n    });\n    if (!_formControl.current) {\n        _formControl.current = {\n            ...createFormControl(props),\n            formState,\n        };\n    }\n    const control = _formControl.current.control;\n    control._options = props;\n    useSubscribe({\n        subject: control._subjects.state,\n        next: (value) => {\n            if (shouldRenderFormState(value, control._proxyFormState, control._updateFormState, true)) {\n                updateFormState({ ...control._formState });\n            }\n        },\n    });\n    React.useEffect(() => control._disableForm(props.disabled), [control, props.disabled]);\n    React.useEffect(() => {\n        if (control._proxyFormState.isDirty) {\n            const isDirty = control._getDirty();\n            if (isDirty !== formState.isDirty) {\n                control._subjects.state.next({\n                    isDirty,\n                });\n            }\n        }\n    }, [control, formState.isDirty]);\n    React.useEffect(() => {\n        if (props.values && !deepEqual(props.values, _values.current)) {\n            control._reset(props.values, control._options.resetOptions);\n            _values.current = props.values;\n            updateFormState((state) => ({ ...state }));\n        }\n        else {\n            control._resetDefaultValues();\n        }\n    }, [props.values, control]);\n    React.useEffect(() => {\n        if (props.errors) {\n            control._setErrors(props.errors);\n        }\n    }, [props.errors, control]);\n    React.useEffect(() => {\n        if (!control._state.mount) {\n            control._updateValid();\n            control._state.mount = true;\n        }\n        if (control._state.watch) {\n            control._state.watch = false;\n            control._subjects.state.next({ ...control._formState });\n        }\n        control._removeUnmounted();\n    });\n    React.useEffect(() => {\n        props.shouldUnregister &&\n            control._subjects.values.next({\n                values: control._getWatch(),\n            });\n    }, [props.shouldUnregister, control]);\n    _formControl.current.formState = getProxyFormState(formState, control);\n    return _formControl.current;\n}\n\nexport { Controller, Form, FormProvider, appendErrors, get, set, useController, useFieldArray, useForm, useFormContext, useFormState, useWatch };\n//# sourceMappingURL=index.esm.mjs.map\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst LoginPage: React.FC = () => {\r\n  const { login } = useAuth();\r\n  const navigate = useNavigate();\r\n  const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n  const onSubmit = async (data: any) => {\r\n    try {\r\n      await login(data.email, data.password);\r\n      navigate('/');\r\n    } catch (error) {\r\n      console.error('Login failed:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='flex min-h-screen items-center justify-center bg-gray-50 dark:bg-gray-900 px-4 py-12 sm:px-6 lg:px-8'>\r\n      <div className='w-full max-w-md space-y-8'>\r\n        <div>\r\n          <h2 className='mt-6 text-center text-3xl font-extrabold text-gray-900 dark:text-white'>\r\n            Sign in to your account\r\n          </h2>\r\n        </div>\r\n        <form className='mt-8 space-y-6' onSubmit={handleSubmit(onSubmit)}>\r\n          <div className='rounded-md shadow-sm -space-y-px'>\r\n            <div>\r\n              <label htmlFor='email-address' className='sr-only'>\r\n                Email address\r\n              </label>\r\n              <input\r\n                id='email-address'\r\n                type='email'\r\n                autoComplete='email'\r\n                {...register('email', { required: true })}\r\n                className='appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-primary focus:border-primary focus:z-10 sm:text-sm'\r\n                placeholder='Email address'\r\n              />\r\n              {errors.email && <p className='text-red-500 text-xs mt-1'>Email is required</p>}\r\n            </div>\r\n            <div>\r\n              <label htmlFor='password' className='sr-only'>\r\n                Password\r\n              </label>\r\n              <input\r\n                id='password'\r\n                type='password'\r\n                autoComplete='current-password'\r\n                {...register('password', { required: true })}\r\n                className='appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-primary focus:border-primary focus:z-10 sm:text-sm'\r\n                placeholder='Password'\r\n              />\r\n              {errors.password && <p className='text-red-500 text-xs mt-1'>Password is required</p>}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <button\r\n              type='submit'\r\n              className='group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary'\r\n            >\r\n              Sign in\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst RegisterPage: React.FC = () => {\r\n  const { register: registerUser } = useAuth();\r\n  const navigate = useNavigate();\r\n  const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n  const onSubmit = async (data: any) => {\r\n    try {\r\n      await registerUser(data.email, data.password, data.name);\r\n      navigate('/');\r\n    } catch (error) {\r\n      console.error('Registration failed:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='flex min-h-screen items-center justify-center bg-gray-50 dark:bg-gray-900 px-4 py-12 sm:px-6 lg:px-8'>\r\n      <div className='w-full max-w-md space-y-8'>\r\n        <div>\r\n          <h2 className='mt-6 text-center text-3xl font-extrabold text-gray-900 dark:text-white'>\r\n            Create a new account\r\n          </h2>\r\n        </div>\r\n        <form className='mt-8 space-y-6' onSubmit={handleSubmit(onSubmit)}>\r\n          <div className='rounded-md shadow-sm -space-y-px'>\r\n            <div>\r\n              <label htmlFor='name' className='sr-only'>\r\n                Full Name\r\n              </label>\r\n              <input\r\n                id='name'\r\n                type='text'\r\n                {...register('name', { required: true })}\r\n                className='appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-primary focus:border-primary focus:z-10 sm:text-sm'\r\n                placeholder='Full Name'\r\n              />\r\n              {errors.name && <p className='text-red-500 text-xs mt-1'>Name is required</p>}\r\n            </div>\r\n            <div>\r\n              <label htmlFor='email-address' className='sr-only'>\r\n                Email address\r\n              </label>\r\n              <input\r\n                id='email-address'\r\n                type='email'\r\n                autoComplete='email'\r\n                {...register('email', { required: true })}\r\n                className='appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-primary focus:border-primary focus:z-10 sm:text-sm'\r\n                placeholder='Email address'\r\n              />\r\n              {errors.email && <p className='text-red-500 text-xs mt-1'>Email is required</p>}\r\n            </div>\r\n            <div>\r\n              <label htmlFor='password' className='sr-only'>\r\n                Password\r\n              </label>\r\n              <input\r\n                id='password'\r\n                type='password'\r\n                autoComplete='new-password'\r\n                {...register('password', { required: true, minLength: 6 })}\r\n                className='appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-primary focus:border-primary focus:z-10 sm:text-sm'\r\n                placeholder='Password'\r\n              />\r\n              {errors.password && <p className='text-red-500 text-xs mt-1'>Password is required (min 6 characters)</p>}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <button\r\n              type='submit'\r\n              className='group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary'\r\n            >\r\n              Register\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React from 'react';\r\n\r\nconst HomePage: React.FC = () => {\r\n  return (\r\n    <div className='container mx-auto px-4 py-8'>\r\n      <h1 className='text-3xl font-bold mb-6'>Welcome to Pet Feeder</h1>\r\n      <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6'>\r\n        <div className='bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6'>\r\n          <h2 className='text-xl font-semibold mb-4'>Recent Feedings</h2>\r\n          <p>No recent feedings recorded.</p>\r\n        </div>\r\n        <div className='bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6'>\r\n          <h2 className='text-xl font-semibold mb-4'>Food Level</h2>\r\n          <div className='h-4 w-full bg-gray-200 rounded-full'>\r\n            <div className='h-4 bg-primary rounded-full' style={{ width: '75%' }}></div>\r\n          </div>\r\n          <p className='mt-2 text-sm text-gray-600 dark:text-gray-300'>75% remaining</p>\r\n        </div>\r\n        <div className='bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6'>\r\n          <h2 className='text-xl font-semibold mb-4'>Device Status</h2>\r\n          <p className='text-green-500'>Online</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\n\r\nconst FeedingSchedulePage: React.FC = () => {\r\n  return (\r\n    <div className='container mx-auto px-4 py-8'>\r\n      <h1 className='text-3xl font-bold mb-6'>Feeding Schedule</h1>\r\n      <div className='bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6'>\r\n        <h2 className='text-xl font-semibold mb-4'>Current Schedule</h2>\r\n        <div className='overflow-x-auto'>\r\n          <table className='min-w-full'>\r\n            <thead>\r\n              <tr>\r\n                <th className='px-4 py-2 text-left'>Time</th>\r\n                <th className='px-4 py-2 text-left'>Amount</th>\r\n                <th className='px-4 py-2 text-left'>Days</th>\r\n                <th className='px-4 py-2 text-left'>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td className='border px-4 py-2'>8:00 AM</td>\r\n                <td className='border px-4 py-2'>1/2 cup</td>\r\n                <td className='border px-4 py-2'>Mon, Tue, Wed, Thu, Fri</td>\r\n                <td className='border px-4 py-2'>\r\n                  <button className='text-blue-500 mr-2'>Edit</button>\r\n                  <button className='text-red-500'>Delete</button>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className='border px-4 py-2'>6:00 PM</td>\r\n                <td className='border px-4 py-2'>1/2 cup</td>\r\n                <td className='border px-4 py-2'>Mon, Tue, Wed, Thu, Fri</td>\r\n                <td className='border px-4 py-2'>\r\n                  <button className='text-blue-500 mr-2'>Edit</button>\r\n                  <button className='text-red-500'>Delete</button>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className='border px-4 py-2'>9:00 AM</td>\r\n                <td className='border px-4 py-2'>3/4 cup</td>\r\n                <td className='border px-4 py-2'>Sat, Sun</td>\r\n                <td className='border px-4 py-2'>\r\n                  <button className='text-blue-500 mr-2'>Edit</button>\r\n                  <button className='text-red-500'>Delete</button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <button className='mt-6 bg-primary text-white py-2 px-4 rounded'>Add New Schedule</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedingSchedulePage;\r\n","import React from 'react';\r\n\r\nconst SettingsPage: React.FC = () => {\r\n  return (\r\n    <div className='container mx-auto px-4 py-8'>\r\n      <h1 className='text-3xl font-bold mb-6'>Settings</h1>\r\n      <div className='bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6'>\r\n        <h2 className='text-xl font-semibold mb-4'>Device Settings</h2>\r\n        <form>\r\n          <div className='mb-4'>\r\n            <label className='block text-sm font-medium mb-2'>Device Name</label>\r\n            <input\r\n              type='text'\r\n              className='w-full p-2 border rounded'\r\n              defaultValue='Kitchen Pet Feeder'\r\n            />\r\n          </div>\r\n          <div className='mb-4'>\r\n            <label className='block text-sm font-medium mb-2'>Time Zone</label>\r\n            <select className='w-full p-2 border rounded'>\r\n              <option>Eastern Time (ET)</option>\r\n              <option>Central Time (CT)</option>\r\n              <option>Mountain Time (MT)</option>\r\n              <option>Pacific Time (PT)</option>\r\n            </select>\r\n          </div>\r\n          <div className='mb-4'>\r\n            <label className='block text-sm font-medium mb-2'>Portion Size</label>\r\n            <select className='w-full p-2 border rounded'>\r\n              <option>Small (1/4 cup)</option>\r\n              <option>Medium (1/2 cup)</option>\r\n              <option>Large (3/4 cup)</option>\r\n              <option>Extra Large (1 cup)</option>\r\n            </select>\r\n          </div>\r\n          <div className='mb-4 flex items-center'>\r\n            <input type='checkbox' id='notifications' className='mr-2' />\r\n            <label htmlFor='notifications'>Enable Notifications</label>\r\n          </div>\r\n          <button type='submit' className='bg-primary text-white py-2 px-4 rounded'>\r\n            Save Settings\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsPage;\r\n","import React from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst ProfilePage: React.FC = () => {\r\n  const { user, logout } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    navigate('/login');\r\n  };\r\n\r\n  return (\r\n    <div className='container mx-auto px-4 py-8'>\r\n      <h1 className='text-3xl font-bold mb-6'>Your Profile</h1>\r\n      <div className='bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6'>\r\n        <div className='mb-6 flex items-center'>\r\n          <div className='h-20 w-20 rounded-full bg-gray-300 flex items-center justify-center text-2xl text-gray-600'>\r\n            {user?.name?.[0] || user?.email?.[0]}\r\n          </div>\r\n          <div className='ml-4'>\r\n            <h2 className='text-xl font-bold'>{user?.name || 'User'}</h2>\r\n            <p className='text-gray-600 dark:text-gray-300'>{user?.email}</p>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className='mb-6'>\r\n          <h3 className='text-lg font-semibold mb-3'>Account Information</h3>\r\n          <div className='mb-2'>\r\n            <span className='text-gray-500 dark:text-gray-400'>Email:</span> {user?.email}\r\n          </div>\r\n          <div className='mb-2'>\r\n            <span className='text-gray-500 dark:text-gray-400'>Member since:</span> March 2024\r\n          </div>\r\n        </div>\r\n        \r\n        <div className='mb-6'>\r\n          <h3 className='text-lg font-semibold mb-3'>Connected Devices</h3>\r\n          <div className='mb-2'>\r\n            <span className='text-gray-500 dark:text-gray-400'>Device 1:</span> Kitchen Pet Feeder\r\n            <span className='ml-3 text-green-500 text-sm'>Online</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className='flex mt-8'>\r\n          <button className='bg-blue-500 text-white py-2 px-4 rounded mr-3'>\r\n            Edit Profile\r\n          </button>\r\n          <button \r\n            className='bg-red-500 text-white py-2 px-4 rounded'\r\n            onClick={handleLogout}\r\n          >\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import React from 'react';\r\nimport { useToast } from \"@/hooks/use-toast\";\r\n\r\n// Create a mock Toaster component that renders nothing\r\n// In a real application, use the actual Sonner/toast component\r\nexport function Toaster() {\r\n  return null;\r\n}\r\n","import React from 'react';\r\nimport { Outlet, Link, useLocation } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Toaster } from \"@/components/ui/toaster\";\r\nimport { Loader2 } from \"lucide-react\";\r\nimport { useMobileNav } from \"@/hooks/use-mobile\";\r\n\r\n/**\r\n * Layout component that wraps content\r\n * @param {React.PropsWithChildren} props - Component props with children\r\n */\r\nconst Layout: React.FC = () => {\r\n  const location = useLocation();\r\n  const { user } = useAuth();\r\n\r\n  return (\r\n    <div className='flex h-screen bg-gray-100 dark:bg-gray-900'>\r\n      {/* Sidebar */}\r\n      <div className='w-64 bg-white dark:bg-gray-800 shadow-lg'>\r\n        <div className='p-4'>\r\n          <h1 className='text-2xl font-bold text-primary'>Pet Feeder</h1>\r\n        </div>\r\n        <nav className='mt-6'>\r\n          <Link\r\n            to='/'\r\n            className={`flex items-center px-4 py-2 ${\r\n              location.pathname === '/' \r\n                ? 'bg-primary bg-opacity-10 text-primary' \r\n                : 'text-gray-700 dark:text-gray-200'\r\n            }`}\r\n          >\r\n            <span>Dashboard</span>\r\n          </Link>\r\n          <Link\r\n            to='/feeding-schedule'\r\n            className={`flex items-center px-4 py-2 ${\r\n              location.pathname === '/feeding-schedule' \r\n                ? 'bg-primary bg-opacity-10 text-primary' \r\n                : 'text-gray-700 dark:text-gray-200'\r\n            }`}\r\n          >\r\n            <span>Feeding Schedule</span>\r\n          </Link>\r\n          <Link\r\n            to='/settings'\r\n            className={`flex items-center px-4 py-2 ${\r\n              location.pathname === '/settings' \r\n                ? 'bg-primary bg-opacity-10 text-primary' \r\n                : 'text-gray-700 dark:text-gray-200'\r\n            }`}\r\n          >\r\n            <span>Settings</span>\r\n          </Link>\r\n          <Link\r\n            to='/profile'\r\n            className={`flex items-center px-4 py-2 ${\r\n              location.pathname === '/profile' \r\n                ? 'bg-primary bg-opacity-10 text-primary' \r\n                : 'text-gray-700 dark:text-gray-200'\r\n            }`}\r\n          >\r\n            <span>Profile</span>\r\n          </Link>\r\n        </nav>\r\n      </div>\r\n      \r\n      {/* Main Content */}\r\n      <div className='flex-1 overflow-y-auto'>\r\n        <main>\r\n          <Outlet />\r\n        </main>\r\n      </div>\r\n      <Toaster />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport { useAuth } from './contexts/AuthContext';\r\nimport LoginPage from './pages/LoginPage';\r\nimport RegisterPage from './pages/RegisterPage';\r\nimport HomePage from './pages/HomePage';\r\nimport FeedingSchedulePage from './pages/FeedingSchedulePage';\r\nimport SettingsPage from './pages/SettingsPage';\r\nimport ProfilePage from './pages/ProfilePage';\r\nimport Layout from './components/Layout';\r\n\r\nconst App: React.FC = () => {\r\n  const { user } = useAuth();\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        {!user ? (\r\n          <>\r\n            <Route path=\"/login\" element={<LoginPage />} />\r\n            <Route path=\"/register\" element={<RegisterPage />} />\r\n            <Route path=\"*\" element={<Navigate to=\"/login\" replace />} />\r\n          </>\r\n        ) : (\r\n          <Route element={<Layout />}>\r\n            <Route path=\"/\" element={<HomePage />} />\r\n            <Route path=\"/feeding-schedule\" element={<FeedingSchedulePage />} />\r\n            <Route path=\"/settings\" element={<SettingsPage />} />\r\n            <Route path=\"/profile\" element={<ProfilePage />} />\r\n            <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\r\n          </Route>\r\n        )}\r\n      </Routes>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { createContext, useContext, useState, ReactNode } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport type NotificationType = 'info' | 'success' | 'warning' | 'error';\r\n\r\nexport interface Notification {\r\n  id: string;\r\n  type: NotificationType;\r\n  message: string;\r\n  duration?: number;\r\n}\r\n\r\ninterface NotificationContextType {\r\n  notifications: Notification[];\r\n  addNotification: (notification: Omit<Notification, 'id'>) => void;\r\n  removeNotification: (id: string) => void;\r\n}\r\n\r\nconst NotificationContext = createContext<NotificationContextType | undefined>(undefined);\r\n\r\nexport const useNotification = () => {\r\n  const context = useContext(NotificationContext);\r\n  if (!context) {\r\n    throw new Error('useNotification must be used within a NotificationProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface NotificationProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const NotificationProvider = ({ children }: NotificationProviderProps) => {\r\n  const [notifications, setNotifications] = useState<Notification[]>([]);\r\n\r\n  const addNotification = (notification: Omit<Notification, 'id'>) => {\r\n    const id = uuidv4();\r\n    const newNotification = { ...notification, id };\r\n    \r\n    setNotifications((prev) => [...prev, newNotification]);\r\n    \r\n    if (notification.duration !== Infinity) {\r\n      setTimeout(() => {\r\n        removeNotification(id);\r\n      }, notification.duration || 5000);\r\n    }\r\n  };\r\n\r\n  const removeNotification = (id: string) => {\r\n    setNotifications((prev) => prev.filter((notification) => notification.id !== id));\r\n  };\r\n\r\n  return (\r\n    <NotificationContext.Provider value={{ notifications, addNotification, removeNotification }}>\r\n      {children}\r\n    </NotificationContext.Provider>\r\n  );\r\n};\r\n\r\nexport default NotificationContext;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport { NotificationProvider } from './contexts/NotificationContext';\r\nimport { AuthProvider } from './contexts/AuthContext';\r\nimport './index.css';\r\n\r\nReactDOM.createRoot(document.getElementById('root')!).render(\r\n  <React.StrictMode>\r\n    <AuthProvider>\r\n      <NotificationProvider>\r\n        <App />\r\n      </NotificationProvider>\r\n    </AuthProvider>\r\n  </React.StrictMode>,\r\n);\r\n"],"names":["m","require$$0","client","AuthContext","createContext","useAuth","context","useContext","AuthProvider","children","user","setUser","useState","login","email","password","logout","register","name","jsx","isCheckBoxInput","element","isDateObject","value","isNullOrUndefined","isObjectType","isObject","getEventValue","event","getNodeParentName","isNameInFieldArray","names","isPlainObject","tempObject","prototypeCopy","isWeb","cloneObject","data","copy","isArray","isFileListInstance","key","compact","isUndefined","val","get","object","path","defaultValue","result","isBoolean","isKey","stringToPath","input","set","index","tempPath","length","lastIndex","newValue","objValue","EVENTS","VALIDATION_MODE","INPUT_VALIDATION_RULES","React","getProxyFormState","formState","control","localProxyFormState","isRoot","_key","isEmptyObject","shouldRenderFormState","formStateData","_proxyFormState","updateFormState","convertToArrayPayload","useSubscribe","props","_props","subscription","isString","generateWatchOutput","_names","formValues","isGlobal","fieldName","appendErrors","validateAllFieldCriteria","errors","type","message","getValidationModes","mode","isWatched","isBlurEvent","watchName","iterateFieldsByAction","fields","action","fieldsNames","abortEarly","field","_f","currentField","updateFieldArrayRootError","error","fieldArrayErrors","isFileInput","isFunction","isHTMLElement","owner","isMessage","isRadioInput","isRegex","defaultResult","validResult","getCheckboxValue","options","values","option","defaultReturn","getRadioValue","previous","getValidateError","ref","getValueAndMessage","validationData","validateField","disabledFieldNames","shouldUseNativeValidation","isFieldArray","refs","required","maxLength","minLength","min","max","pattern","validate","valueAsNumber","mount","inputValue","inputRef","setCustomValidity","isRadio","isCheckBox","isRadioOrCheckbox","isEmpty","appendErrorsCurry","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","exceedMin","maxOutput","minOutput","valueNumber","valueDate","convertTimeToDate","time","isTime","isWeek","maxLengthOutput","minLengthOutput","patternValue","validateError","validationResult","baseGet","updatePath","isEmptyArray","obj","unset","paths","childObject","createSubject","_observers","observer","o","isPrimitive","deepEqual","object1","object2","keys1","keys2","val1","val2","isMultipleSelect","live","objectHasFunction","markFieldsDirty","isParentNodeArray","getDirtyFieldsFromDefaultValues","dirtyFieldsFromValues","getDirtyFields","defaultValues","getFieldValueAs","valueAsDate","setValueAs","getFieldValue","getResolverOptions","_fields","criteriaMode","getRuleValue","rule","ASYNC_FUNCTION","hasPromiseValidation","fieldReference","validateFunction","hasValidation","schemaErrorLookup","foundError","skipValidation","isTouched","isSubmitted","reValidateMode","unsetEmptyArray","defaultOptions","createFormControl","_options","_formState","_defaultValues","_formValues","_state","delayErrorCallback","timer","_subjects","validationModeBeforeSubmit","validationModeAfterSubmit","shouldDisplayAllAssociatedErrors","debounce","callback","wait","_updateValid","shouldUpdateValid","isValid","_executeSchema","executeBuiltInValidation","_updateIsValidating","isValidating","_updateFieldArray","method","args","shouldSetValues","shouldUpdateFieldsAndState","fieldValues","touchedFields","_getDirty","updateErrors","_setErrors","updateValidAndValue","shouldSkipSetValueAs","setFieldValue","updateTouchAndDirty","fieldValue","shouldDirty","shouldRender","shouldUpdateField","isPreviousDirty","output","disabledField","isCurrentFieldPristine","isPreviousFieldTouched","shouldRenderByError","fieldState","previousFieldError","updatedFormState","executeSchemaAndUpdateState","shouldOnlyCheckValid","isFieldArrayRoot","isPromiseFunction","fieldError","_removeUnmounted","unregister","getValues","_getWatch","_getFieldArray","optionRef","checkboxRef","radioRef","trigger","setValues","fieldKey","setValue","cloneValue","onChange","target","isFieldValueUpdated","getCurrentFieldValue","_updateIsFieldValueUpdated","shouldSkipValidation","watched","previousErrorLookupResult","errorLookupResult","_focusInput","fieldNames","getFieldState","clearErrors","inputName","setError","currentError","currentRef","restOfErrorTree","watch","payload","_updateDisabledField","disabled","disabledIsDefined","fieldRef","radioOrCheckbox","_focusError","_disableForm","handleSubmit","onValid","onInvalid","e","onValidError","resetField","_reset","keepStateOptions","updatedValues","cloneUpdatedValues","isEmptyResetValues","fieldsToCheck","form","reset","useForm","_formControl","_values","isDirty","state","LoginPage","navigate","useNavigate","onSubmit","jsxs","RegisterPage","registerUser","HomePage","FeedingSchedulePage","SettingsPage","ProfilePage","handleLogout","_a","_b","Toaster","Layout","location","useLocation","Link","Outlet","App","Router","Routes","Route","Navigate","Fragment","getRandomValues","rnds8","rng","byteToHex","i","unsafeStringify","arr","offset","randomUUID","native","v4","buf","rnds","NotificationContext","NotificationProvider","notifications","setNotifications","addNotification","notification","id","uuidv4","newNotification","prev","removeNotification","ReactDOM"],"mappings":"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","x_google_ignoreList":[0,2,12,13,14,15]}